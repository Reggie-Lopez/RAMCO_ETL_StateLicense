<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/4/2024 12:41:21 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HOME-BASE"
  DTS:CreatorName="HOME-BASE\Lopez"
  DTS:DTSID="{48B1A645-DCA4-49B3-881E-DB3841F9EA49}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="sync - FL"
  DTS:PackageType="5"
  DTS:VersionBuild="240"
  DTS:VersionGUID="{3DF4F2F8-F8CF-4C32-9F35-E892B9ECD40D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Entities - CSV]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{631406F2-E8CD-4E2F-A7AD-1CAB97B2A733}"
      DTS:ObjectName="Entities - CSV">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:DataRowsToSkip="390"
          DTS:TextQualifier="_x005C_0"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Integration Components\FL\Working\entities.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="129"
              DTS:ObjectName="FileRow"
              DTS:DTSID="{DA490EB8-4388-4101-91F0-B300981DE61E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Licensees - CSV]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{1677AA1E-9080-4F98-A06E-0B99ED20D1C2}"
      DTS:ObjectName="Licensees - CSV">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:DataRowsToSkip="390"
          DTS:TextQualifier="_x005C_0"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Integration Components\FL\Working\licensees.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="400"
              DTS:DataType="129"
              DTS:ObjectName="FileRow"
              DTS:DTSID="{BFA7F723-FF13-44D8-A03C-B1DC5D928025}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RAMCO]"
      DTS:CreationName="DYNAMICS-CRM"
      DTS:DTSID="{C46CBD5D-3E52-4147-9F7F-64D9A0903304}"
      DTS:ObjectName="RAMCO">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::connectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="OrganizationName">@[User::orgName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerHost">@[User::orgURL]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="DeploymentType=Crm2011;ServerHost=https://rpcracrm.ramcoams.org/;ServerUser=reggie.lopez@ramco.ams;OrganizationName=RPCRACRM (RPCRACRM);ServerTimeout=100;RetainSameConnection=True;Compression=False;ConnectionSharing=False;CallerId=;OrganizationUrl=;ProxyHost=;ProxyPort=0;ProxyUser=;"
          ConnectByProxy="False">
          <ServerPassword
            Sensitive="1" xmlns="www.microsoft.com/SqlServer/Dts"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmMDM6mTb20Sn+XhEPCYEWQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABpLHMU/ireKSWgwoYQ4dtksadx0IJxn0uF2WBk7cIXHQAAAAAOgAAAAAIAACAAAAB8sNGPhtH2Dea4kKH8fh1QDu4zi/tQuzluIapkd5KNiiAAAADC1ObWKD9HAlMt3QyaaJg8KP7jKFj4XnybszuZHKuqz0AAAAAYXGGTdFhqdmrv3Jg6b5qkX4sW/Tb27OnbGLM2MPd4H9WwRajoSKVq7l/Y78lSVFYkicUyEDBZ5R6LoSpxffqh</ServerPassword>
        </ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D49F5F53-9AD3-4D31-90DC-572F9BF44839}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DeploymentType=Crm2011;ServerHost=&quot; + @[User::orgURL] + &quot;;ServerUser=reggie.lopez@ramco.ams;OrganizationName=&quot; + @[User::orgName] + &quot;;ServerTimeout=100;RetainSameConnection=True;Compression=False;ConnectionSharing=False;CallerId=;OrganizationUrl=;ProxyHost=;ProxyPort=0;ProxyUser=;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="connectionString">
      <DTS:VariableValue
        DTS:DataType="8">DeploymentType=Crm2011;ServerHost=https://rpcracrm.ramcoams.org/;ServerUser=reggie.lopez@ramco.ams;OrganizationName=RPCRACRM (RPCRACRM);ServerTimeout=100;RetainSameConnection=True;Compression=False;ConnectionSharing=False;CallerId=;OrganizationUrl=;ProxyHost=;ProxyPort=0;ProxyUser=;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F65093B1-EEB2-46CD-8E8D-CD57AA1AD089}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="user"
      DTS:ObjectName="entitiesCSV"
      DTS:ReadOnly="True">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{691988CF-5E6D-4FC8-B033-A32662703B5A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="orgGUID">
      <DTS:VariableValue
        DTS:DataType="8">{D18728F0-0595-45BF-AB04-723F22EE5442}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ACDE6F2C-336A-4F46-B6FE-949640CD420E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[User::orgPrefix] + &quot;crm (&quot; + @[User::orgPrefix] + &quot;crm)&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="orgName">
      <DTS:VariableValue
        DTS:DataType="8">RPCRACRM (RPCRACRM)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{073EFCFA-DEF6-4EC9-B33C-9F6F99C6D4E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="orgPrefix">
      <DTS:VariableValue
        DTS:DataType="8">rpcra</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A5680AE3-323D-4861-9EA3-99C5BB996F67}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;https://&quot; + @[User::orgPrefix] + &quot;crm.ramcoams.org/&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="orgURL">
      <DTS:VariableValue
        DTS:DataType="8">https://rpcracrm.ramcoams.org/</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EC6C1473-3A03-4D52-84CC-E5A82ACED144}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="8"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachItemEnumerator"
        DTS:DTSID="{DFE1AD25-935D-48E1-8C98-3DD248E0DEC4}"
        DTS:ObjectName="{DFE1AD25-935D-48E1-8C98-3DD248E0DEC4}">
        <DTS:ObjectData>
          <FEIEItems>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="MYRASM" />
              <FEIEItemValue
                Type="8"
                Value="{1ef1ed17-4201-4837-b121-6b58ffebd3d8}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="OSCAR" />
              <FEIEItemValue
                Type="8"
                Value="{2e394cf8-71ca-4c98-adfb-6c7ce5cd9c57}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="RAMCFL" />
              <FEIEItemValue
                Type="8"
                Value="{d7f2a0f9-f420-e111-b470-00155d000140}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="RPCRA" />
              <FEIEItemValue
                Type="8"
                Value="{d18728f0-0595-45bf-ab04-723f22ee5442}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="STJOHNS" />
              <FEIEItemValue
                Type="8"
                Value="{e3f2a0f9-f420-e111-b470-00155d000140}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="VABR" />
              <FEIEItemValue
                Type="8"
                Value="{e9f2a0f9-f420-e111-b470-00155d000140}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="ORRA" />
              <FEIEItemValue
                Type="8"
                Value="{9df2a0f9-f420-e111-b470-00155d000140}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="RAPB" />
              <FEIEItemValue
                Type="8"
                Value="{1b9f097f-f2e3-e011-b9e0-00155d000140}" />
            </FEIEItem>
            <FEIEItem>
              <FEIEItemValue
                Type="8"
                Value="MIAMI" />
              <FEIEItemValue
                Type="8"
                Value="{d9f2a0f9-f420-e111-b470-00155d000140}" />
            </FEIEItem>
          </FEIEItems>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{512C4F55-76EF-4973-B025-899FD0697E79}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{CAB587D5-F622-4184-8CEA-712FA96CE5A4}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Associate Licenses"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from Dynamics CRM services.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Extracts data from Dynamics CRM services."
                      name="Associate - Get - Accounts">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmSourceDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies query batch size."
                          name="BatchSize">500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to access the service."
                          name="InputType"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmSource+InputTypes">1</property>
                        <property
                          dataType="System.String"
                          description="Dynamics CRM entity."
                          expressionType="Notify"
                          name="Entity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor"></property>
                        <property
                          dataType="System.String"
                          description="FetchXML statement."
                          expressionType="Notify"
                          name="FetchXML"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.CrmStatementEditor">&lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
  &lt;entity name="account"&gt;
    &lt;attribute name="name" /&gt;
    &lt;attribute name="accountid" /&gt;
    &lt;attribute name="primarycontactid" /&gt;
    &lt;attribute name="ramco_licensenumber" /&gt;
    &lt;order attribute="name" descending="false" /&gt;
    &lt;filter type="and"&gt;
    &lt;condition attribute="ramco_licensenumber" operator="not-null" /&gt;
    &lt;/filter&gt;
  &lt;/entity&gt;
&lt;/fetch&gt;</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection Manager"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output]"
                          name="Dynamics CRM Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[accountid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]"
                              name="accountid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[name]"
                              length="160"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]"
                              name="primarycontactid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]"
                              name="primarycontactidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]"
                              name="primarycontactidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[accountid]"
                              dataType="guid"
                              name="accountid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[name]"
                              dataType="wstr"
                              length="160"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactid]"
                              dataType="guid"
                              name="primarycontactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidname]"
                              dataType="wstr"
                              length="100"
                              name="primarycontactidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidyominame]"
                              dataType="wstr"
                              length="100"
                              name="primarycontactidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from Dynamics CRM services.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Extracts data from Dynamics CRM services."
                      name="Associate - Get - Licenses">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmSourceDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies query batch size."
                          name="BatchSize">500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to access the service."
                          name="InputType"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmSource+InputTypes">1</property>
                        <property
                          dataType="System.String"
                          description="Dynamics CRM entity."
                          expressionType="Notify"
                          name="Entity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor"></property>
                        <property
                          dataType="System.String"
                          description="FetchXML statement."
                          expressionType="Notify"
                          name="FetchXML"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.CrmStatementEditor">&lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
  &lt;entity name="ramco_statelicense"&gt;
    &lt;attribute name="ramco_licensenumber" /&gt;
    &lt;attribute name="ramco_statelicenseid" /&gt;
    &lt;attribute name="ramco_core_individualorentity" /&gt;
    &lt;order attribute="ramco_licensenumber" descending="false" /&gt;
    &lt;filter type="and"&gt;
      &lt;condition attribute="ramco_core_individualorentity" operator="not-null"/&gt;
    &lt;/filter&gt;
  &lt;/entity&gt;
&lt;/fetch&gt;</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection Manager"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output]"
                          name="Dynamics CRM Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentity]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_core_individualorentity]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentity]"
                              name="ramco_core_individualorentity" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentityname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_core_individualorentityname]"
                              length="250"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentityname]"
                              name="ramco_core_individualorentityname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_statelicenseid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_statelicenseid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_statelicenseid]"
                              name="ramco_statelicenseid" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_core_individualorentity]"
                              dataType="i4"
                              name="ramco_core_individualorentity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_core_individualorentityname]"
                              dataType="wstr"
                              length="250"
                              name="ramco_core_individualorentityname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_statelicenseid]"
                              dataType="guid"
                              name="ramco_statelicenseid" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from Dynamics CRM services.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Extracts data from Dynamics CRM services."
                      name="Associate - Get - Memberships">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmSourceDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies query batch size."
                          name="BatchSize">500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to access the service."
                          name="InputType"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmSource+InputTypes">1</property>
                        <property
                          dataType="System.String"
                          description="Dynamics CRM entity."
                          expressionType="Notify"
                          name="Entity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor"></property>
                        <property
                          dataType="System.String"
                          description="FetchXML statement."
                          expressionType="Notify"
                          name="FetchXML"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.CrmStatementEditor">&lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
  &lt;entity name="cobalt_membership"&gt;
    &lt;attribute name="ramco_realestatelicense" /&gt;
    &lt;attribute name="cobalt_membershipid" /&gt;
    &lt;attribute name="ramco_officeid" /&gt;
    &lt;attribute name="cobalt_contactid" /&gt;
    &lt;order attribute="ramco_realestatelicense" descending="false" /&gt;
    &lt;filter type="and"&gt;
      &lt;condition attribute="statecode" operator="eq" value="0" /&gt;
      &lt;condition attribute="ramco_realestatelicense" operator="not-null" /&gt;
      &lt;condition attribute="ramco_associationid" operator="eq" value="@[User::orgGUID]" /&gt;
    &lt;/filter&gt;
    &lt;link-entity name="cobalt_membertype" from="cobalt_membertypeid" to="cobalt_membertypeid" alias="af"&gt;
      &lt;filter type="and"&gt;
        &lt;condition attribute="ramco_nrdsmembertype" operator="eq" value="379120000" /&gt;
      &lt;/filter&gt;
    &lt;/link-entity&gt;
  &lt;/entity&gt;
&lt;/fetch&gt;</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection Manager"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output]"
                          name="Dynamics CRM Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]"
                              name="cobalt_contactidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]"
                              name="cobalt_contactidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_membershipid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]"
                              name="ramco_officeid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]"
                              name="ramco_officeidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]"
                              name="ramco_officeidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicense]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              name="ramco_realestatelicense" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicensename]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]"
                              name="ramco_realestatelicensename" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactid]"
                              dataType="guid"
                              name="cobalt_contactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidname]"
                              dataType="wstr"
                              length="100"
                              name="cobalt_contactidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidyominame]"
                              dataType="wstr"
                              length="100"
                              name="cobalt_contactidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_membershipid]"
                              dataType="guid"
                              name="cobalt_membershipid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeid]"
                              dataType="guid"
                              name="ramco_officeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officeidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidyominame]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officeidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicensename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicensename" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Populates Dynamics CRM destination entity.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Populates Dynamics CRM destination entity."
                      name="Associate - Write Accounts to CRM"
                      usesDispositions="true">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmDestinationDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.String"
                          description="Destination entity to load."
                          expressionType="Notify"
                          name="DestinationEntity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor">account</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies destination action type."
                          name="Action"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmDestination+ActionTypes">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if missing object identifiers are ignored."
                          name="IgnoreMissingIdentifier">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if duplicate detection rules are active during create or update."
                          name="DetectDuplicate">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of rows to be sent as a batch to the service."
                          name="BatchSize">50</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to handle multiple match records."
                          name="MultipleMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMulti">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if unchanged attributes are ignored."
                          name="IgnoreUnchanged">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies records matching criteria for Upsert action."
                          name="UpsertMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMatch">2</property>
                        <property
                          dataType="System.String"
                          description="Select alternate keys to match records for Upsert action."
                          name="UpsertAlternateKeys"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.ListEditor"></property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies to ignore columns containing NULL value."
                          name="IgnoreNullValue">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Dynamics CRM Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[accountid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].Columns[ramco_statelicenseid]"
                              cachedDataType="guid"
                              cachedName="ramco_statelicenseid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_statelicense]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[ramco_statelicenseid]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountcategorycode]"
                              dataType="i4"
                              name="accountcategorycode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountclassificationcode]"
                              dataType="i4"
                              name="accountclassificationcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountid]"
                              dataType="guid"
                              name="accountid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountnumber]"
                              dataType="wstr"
                              length="20"
                              name="accountnumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[accountratingcode]"
                              dataType="i4"
                              name="accountratingcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_addressid]"
                              dataType="guid"
                              name="address1_addressid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_addresstypecode]"
                              dataType="i4"
                              name="address1_addresstypecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_city]"
                              dataType="wstr"
                              length="80"
                              name="address1_city" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_country]"
                              dataType="wstr"
                              length="80"
                              name="address1_country" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_county]"
                              dataType="wstr"
                              length="50"
                              name="address1_county" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_fax]"
                              dataType="wstr"
                              length="50"
                              name="address1_fax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_freighttermscode]"
                              dataType="i4"
                              name="address1_freighttermscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_latitude]"
                              dataType="r8"
                              name="address1_latitude" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_line1]"
                              dataType="wstr"
                              length="250"
                              name="address1_line1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_line2]"
                              dataType="wstr"
                              length="250"
                              name="address1_line2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_line3]"
                              dataType="wstr"
                              length="250"
                              name="address1_line3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_longitude]"
                              dataType="r8"
                              name="address1_longitude" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_name]"
                              dataType="wstr"
                              length="200"
                              name="address1_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_postalcode]"
                              dataType="wstr"
                              length="20"
                              name="address1_postalcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_postofficebox]"
                              dataType="wstr"
                              length="20"
                              name="address1_postofficebox" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_primarycontactname]"
                              dataType="wstr"
                              length="100"
                              name="address1_primarycontactname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_shippingmethodcode]"
                              dataType="i4"
                              name="address1_shippingmethodcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_stateorprovince]"
                              dataType="wstr"
                              length="50"
                              name="address1_stateorprovince" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_telephone1]"
                              dataType="wstr"
                              length="50"
                              name="address1_telephone1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_telephone2]"
                              dataType="wstr"
                              length="50"
                              name="address1_telephone2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_telephone3]"
                              dataType="wstr"
                              length="50"
                              name="address1_telephone3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_upszone]"
                              dataType="wstr"
                              length="4"
                              name="address1_upszone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address1_utcoffset]"
                              dataType="i4"
                              name="address1_utcoffset" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_addressid]"
                              dataType="guid"
                              name="address2_addressid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_addresstypecode]"
                              dataType="i4"
                              name="address2_addresstypecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_city]"
                              dataType="wstr"
                              length="80"
                              name="address2_city" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_country]"
                              dataType="wstr"
                              length="80"
                              name="address2_country" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_county]"
                              dataType="wstr"
                              length="50"
                              name="address2_county" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_fax]"
                              dataType="wstr"
                              length="50"
                              name="address2_fax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_freighttermscode]"
                              dataType="i4"
                              name="address2_freighttermscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_latitude]"
                              dataType="r8"
                              name="address2_latitude" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_line1]"
                              dataType="wstr"
                              length="250"
                              name="address2_line1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_line2]"
                              dataType="wstr"
                              length="250"
                              name="address2_line2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_line3]"
                              dataType="wstr"
                              length="250"
                              name="address2_line3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_longitude]"
                              dataType="r8"
                              name="address2_longitude" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_name]"
                              dataType="wstr"
                              length="200"
                              name="address2_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_postalcode]"
                              dataType="wstr"
                              length="20"
                              name="address2_postalcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_postofficebox]"
                              dataType="wstr"
                              length="20"
                              name="address2_postofficebox" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_primarycontactname]"
                              dataType="wstr"
                              length="100"
                              name="address2_primarycontactname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_shippingmethodcode]"
                              dataType="i4"
                              name="address2_shippingmethodcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_stateorprovince]"
                              dataType="wstr"
                              length="50"
                              name="address2_stateorprovince" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_telephone1]"
                              dataType="wstr"
                              length="50"
                              name="address2_telephone1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_telephone2]"
                              dataType="wstr"
                              length="50"
                              name="address2_telephone2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_telephone3]"
                              dataType="wstr"
                              length="50"
                              name="address2_telephone3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_upszone]"
                              dataType="wstr"
                              length="4"
                              name="address2_upszone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[address2_utcoffset]"
                              dataType="i4"
                              name="address2_utcoffset" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[businesstypecode]"
                              dataType="i4"
                              name="businesstypecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_accountupdateformresponseid]"
                              dataType="guid"
                              name="cobalt_accountupdateformresponseid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address1_countryid]"
                              dataType="guid"
                              name="cobalt_address1_countryid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address1_stateprovinceid]"
                              dataType="guid"
                              name="cobalt_address1_stateprovinceid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address1sameas]"
                              dataType="i4"
                              name="cobalt_address1sameas" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address2_countryid]"
                              dataType="guid"
                              name="cobalt_address2_countryid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address2_stateprovinceid]"
                              dataType="guid"
                              name="cobalt_address2_stateprovinceid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_address2sameas]"
                              dataType="i4"
                              name="cobalt_address2sameas" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_faxcountryid]"
                              dataType="guid"
                              name="cobalt_faxcountryid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_joindate]"
                              dataType="dbDate"
                              name="cobalt_joindate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_manualbatchid]"
                              dataType="guid"
                              name="cobalt_manualbatchid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_telephone1countryid]"
                              dataType="guid"
                              name="cobalt_telephone1countryid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[creditlimit]"
                              dataType="cy"
                              name="creditlimit" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[creditonhold]"
                              dataType="bool"
                              name="creditonhold" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[customersizecode]"
                              dataType="i4"
                              name="customersizecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[customertypecode]"
                              dataType="i4"
                              name="customertypecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[defaultpricelevelid]"
                              dataType="guid"
                              name="defaultpricelevelid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[description]"
                              dataType="nText"
                              name="description" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotbulkemail]"
                              dataType="bool"
                              name="donotbulkemail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotbulkpostalmail]"
                              dataType="bool"
                              name="donotbulkpostalmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotemail]"
                              dataType="bool"
                              name="donotemail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotfax]"
                              dataType="bool"
                              name="donotfax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotphone]"
                              dataType="bool"
                              name="donotphone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotpostalmail]"
                              dataType="bool"
                              name="donotpostalmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[donotsendmm]"
                              dataType="bool"
                              name="donotsendmm" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[emailaddress1]"
                              dataType="wstr"
                              length="100"
                              name="emailaddress1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[emailaddress2]"
                              dataType="wstr"
                              length="100"
                              name="emailaddress2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[emailaddress3]"
                              dataType="wstr"
                              length="100"
                              name="emailaddress3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[entityimage]"
                              dataType="image"
                              name="entityimage" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[entityimageid]"
                              dataType="guid"
                              name="entityimageid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[fax]"
                              dataType="wstr"
                              length="50"
                              name="fax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[followemail]"
                              dataType="bool"
                              name="followemail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ftpsiteurl]"
                              dataType="wstr"
                              length="200"
                              name="ftpsiteurl" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[industrycode]"
                              dataType="i4"
                              name="industrycode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[lastonholdtime]"
                              dataType="dbTimeStamp"
                              name="lastonholdtime" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[lastusedincampaign]"
                              dataType="dbDate"
                              name="lastusedincampaign" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[marketcap]"
                              dataType="cy"
                              name="marketcap" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[marketingonly]"
                              dataType="bool"
                              name="marketingonly" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[name]"
                              dataType="wstr"
                              length="160"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[numberofemployees]"
                              dataType="i4"
                              name="numberofemployees" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ownerid]"
                              dataType="guid"
                              name="ownerid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[owneridtype]"
                              dataType="wstr"
                              length="250"
                              name="owneridtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ownershipcode]"
                              dataType="i4"
                              name="ownershipcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[parentaccountid]"
                              dataType="guid"
                              name="parentaccountid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[participatesinworkflow]"
                              dataType="bool"
                              name="participatesinworkflow" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[paymenttermscode]"
                              dataType="i4"
                              name="paymenttermscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredappointmentdaycode]"
                              dataType="i4"
                              name="preferredappointmentdaycode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredappointmenttimecode]"
                              dataType="i4"
                              name="preferredappointmenttimecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredcontactmethodcode]"
                              dataType="i4"
                              name="preferredcontactmethodcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredequipmentid]"
                              dataType="guid"
                              name="preferredequipmentid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredserviceid]"
                              dataType="guid"
                              name="preferredserviceid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[preferredsystemuserid]"
                              dataType="guid"
                              name="preferredsystemuserid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[primarycontactid]"
                              dataType="guid"
                              name="primarycontactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[primarysatoriid]"
                              dataType="wstr"
                              length="200"
                              name="primarysatoriid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[primarytwitterid]"
                              dataType="wstr"
                              length="20"
                              name="primarytwitterid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[processid]"
                              dataType="guid"
                              name="processid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_billingofficeid]"
                              dataType="guid"
                              name="ramco_billingofficeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_branchtype]"
                              dataType="i4"
                              name="ramco_branchtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_businessname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_businessname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_isreferral]"
                              dataType="bool"
                              name="ramco_core_isreferral" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_statelicense]"
                              dataType="guid"
                              name="ramco_core_statelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_corporatename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_corporatename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_deactivatingfromwizard]"
                              dataType="bool"
                              name="ramco_deactivatingfromwizard" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_donotallownarfaxes]"
                              dataType="bool"
                              name="ramco_donotallownarfaxes" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_donotallownarjunkmail]"
                              dataType="bool"
                              name="ramco_donotallownarjunkmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_donotallownarmail]"
                              dataType="bool"
                              name="ramco_donotallownarmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_formalname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_formalname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_franchiseid]"
                              dataType="guid"
                              name="ramco_franchiseid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_includeonnarroster]"
                              dataType="bool"
                              name="ramco_includeonnarroster" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_lastchangeddate]"
                              dataType="dbDate"
                              name="ramco_lastchangeddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_lastupdatedfromintegrationitem]"
                              dataType="wstr"
                              length="100"
                              name="ramco_lastupdatedfromintegrationitem" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_managerdesignee]"
                              dataType="guid"
                              name="ramco_managerdesignee" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_memberdirectory]"
                              dataType="bool"
                              name="ramco_memberdirectory" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsadditionalphone]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsadditionalphone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsbillingoffice]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsbillingoffice" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsbranchtype]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsbranchtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdscorporatelicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdscorporatelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsdirectmarketingmail]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsdirectmarketingmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsdistrict]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsdistrict" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsemail]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsemail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsfranchise]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsfranchise" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsinsertdate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsinsertdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsjoineddate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsjoineddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdslastchanged]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdslastchanged" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmailaddresscity]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmailaddresscity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmailaddressstate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmailaddressstate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmailaddressstreet1]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmailaddressstreet1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmailaddressstreet2]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmailaddressstreet2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmailaddresszip]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmailaddresszip" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmainoffice]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmainoffice" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmlsid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmlsid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsmlsonlinestatus]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsmlsonlinestatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsnmsalespersoncount]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsnmsalespersoncount" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficebusinessname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficebusinessname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficecontactdr]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficecontactdr" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficecontactmanager]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficecontactmanager" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficecontactunlicensed]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficecontactunlicensed" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficecorporatename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficecorporatename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficefax]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficefax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficeformalname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficeformalname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficephone]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficephone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficeprimaryindicator]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficeprimaryindicator" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficestatus]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficestatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsofficetype]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsofficetype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsonlinestatusdate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsonlinestatusdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsonroster]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsonroster" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsparentcompany]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsparentcompany" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsprimaryassociation]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsprimaryassociation" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsprimarystateassociation]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsprimarystateassociation" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdssortsequence]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdssortsequence" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstatusdate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstatusdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstopfax]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstopfax" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstopmail]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstopmail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstreetaddresscity]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstreetaddresscity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstreetaddressstate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstreetaddressstate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstreetaddressstreet1]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstreetaddressstreet1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstreetaddressstreet2]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstreetaddressstreet2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsstreetaddresszip]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsstreetaddresszip" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdstaxid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdstaxid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdstimestamp]"
                              dataType="i4"
                              name="ramco_nrdstimestamp" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdswebpage]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdswebpage" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_officecontactid]"
                              dataType="guid"
                              name="ramco_officecontactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_officecontactunlicensed]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officecontactunlicensed" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_officedistrict]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officedistrict" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_officetype]"
                              dataType="i4"
                              name="ramco_officetype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_otherexplanation]"
                              dataType="wstr"
                              length="100"
                              name="ramco_otherexplanation" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_otherofficetype]"
                              dataType="wstr"
                              length="100"
                              name="ramco_otherofficetype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_ramcoofficeid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_ramcoofficeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_sortname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_sortname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_taxid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_taxid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_test]"
                              dataType="wstr"
                              length="100"
                              name="ramco_test" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_addofficetomls]"
                              dataType="bool"
                              name="ramcosub_addofficetomls" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_suprasendtosupra]"
                              dataType="bool"
                              name="ramcosub_suprasendtosupra" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_suprastatus]"
                              dataType="i4"
                              name="ramcosub_suprastatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[revenue]"
                              dataType="cy"
                              name="revenue" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[sharesoutstanding]"
                              dataType="i4"
                              name="sharesoutstanding" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[shippingmethodcode]"
                              dataType="i4"
                              name="shippingmethodcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[sic]"
                              dataType="wstr"
                              length="20"
                              name="sic" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[slaid]"
                              dataType="guid"
                              name="slaid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[stageid]"
                              dataType="guid"
                              name="stageid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              dataType="i4"
                              name="statecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              dataType="i4"
                              name="statuscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[stockexchange]"
                              dataType="wstr"
                              length="20"
                              name="stockexchange" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[telephone1]"
                              dataType="wstr"
                              length="50"
                              name="telephone1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[telephone2]"
                              dataType="wstr"
                              length="50"
                              name="telephone2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[telephone3]"
                              dataType="wstr"
                              length="50"
                              name="telephone3" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[territorycode]"
                              dataType="i4"
                              name="territorycode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[territoryid]"
                              dataType="guid"
                              name="territoryid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[tickersymbol]"
                              dataType="wstr"
                              length="10"
                              name="tickersymbol" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[timezoneruleversionnumber]"
                              dataType="i4"
                              name="timezoneruleversionnumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[transactioncurrencyid]"
                              dataType="guid"
                              name="transactioncurrencyid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[traversedpath]"
                              dataType="wstr"
                              length="1250"
                              name="traversedpath" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[utcconversiontimezonecode]"
                              dataType="i4"
                              name="utcconversiontimezonecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[websiteurl]"
                              dataType="wstr"
                              length="200"
                              name="websiteurl" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[yominame]"
                              dataType="wstr"
                              length="160"
                              name="yominame" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Dynamics CRM Destination Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Populates Dynamics CRM destination entity.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Populates Dynamics CRM destination entity."
                      name="Associate - Write Memberships to CRM"
                      usesDispositions="true">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmDestinationDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.String"
                          description="Destination entity to load."
                          expressionType="Notify"
                          name="DestinationEntity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor">cobalt_membership</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies destination action type."
                          name="Action"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmDestination+ActionTypes">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if missing object identifiers are ignored."
                          name="IgnoreMissingIdentifier">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if duplicate detection rules are active during create or update."
                          name="DetectDuplicate">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of rows to be sent as a batch to the service."
                          name="BatchSize">50</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to handle multiple match records."
                          name="MultipleMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMulti">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if unchanged attributes are ignored."
                          name="IgnoreUnchanged">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies records matching criteria for Upsert action."
                          name="UpsertMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMatch">2</property>
                        <property
                          dataType="System.String"
                          description="Select alternate keys to match records for Upsert action."
                          name="UpsertAlternateKeys"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.ListEditor"></property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies to ignore columns containing NULL value."
                          name="IgnoreNullValue">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Dynamics CRM Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].Columns[ramco_statelicenseid]"
                              cachedDataType="guid"
                              cachedName="ramco_statelicenseid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_statelicense]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_statelicenseid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_membershipid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_joindate]"
                              dataType="dbDate"
                              name="cobalt_joindate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ownerid]"
                              dataType="guid"
                              name="ownerid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[owneridtype]"
                              dataType="wstr"
                              length="250"
                              name="owneridtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[processid]"
                              dataType="guid"
                              name="processid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_statelicense]"
                              dataType="guid"
                              name="ramco_core_statelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_lastupdatedfromintegrationitem]"
                              dataType="wstr"
                              length="100"
                              name="ramco_lastupdatedfromintegrationitem" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdsid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdsinsertdate]"
                              dataType="dbDate"
                              name="ramco_nrdsinsertdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nrdstimestamp]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nrdstimestamp" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[stageid]"
                              dataType="guid"
                              name="stageid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              dataType="i4"
                              name="statecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              dataType="i4"
                              name="statuscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[timezoneruleversionnumber]"
                              dataType="i4"
                              name="timezoneruleversionnumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[transactioncurrencyid]"
                              dataType="guid"
                              name="transactioncurrencyid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[traversedpath]"
                              dataType="wstr"
                              length="1250"
                              name="traversedpath" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[utcconversiontimezonecode]"
                              dataType="i4"
                              name="utcconversiontimezonecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_accountid]"
                              dataType="guid"
                              name="cobalt_accountid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_contactid]"
                              dataType="guid"
                              name="cobalt_contactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_expirationdate]"
                              dataType="dbDate"
                              name="cobalt_expirationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_lastrenewdate]"
                              dataType="dbDate"
                              name="cobalt_lastrenewdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_membershipid]"
                              dataType="guid"
                              name="cobalt_membershipid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_membertypeid]"
                              dataType="guid"
                              name="cobalt_membertypeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_name]"
                              dataType="wstr"
                              length="100"
                              name="cobalt_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_optout]"
                              dataType="bool"
                              name="cobalt_optout" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[cobalt_optoutdate]"
                              dataType="dbDate"
                              name="cobalt_optoutdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_allowdueswheninactive]"
                              dataType="bool"
                              name="ramco_allowdueswheninactive" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_appraiserlicensename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_appraiserlicensename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_approvedbyboarddate]"
                              dataType="dbDate"
                              name="ramco_approvedbyboarddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_arbitrationethicspending]"
                              dataType="bool"
                              name="ramco_arbitrationethicspending" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_associationid]"
                              dataType="guid"
                              name="ramco_associationid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_duesbillingresponsibility]"
                              dataType="i4"
                              name="ramco_duesbillingresponsibility" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_dueswaivedlocal]"
                              dataType="bool"
                              name="ramco_dueswaivedlocal" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_dueswaivednational]"
                              dataType="bool"
                              name="ramco_dueswaivednational" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_dueswaivedstate]"
                              dataType="bool"
                              name="ramco_dueswaivedstate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_excludefrommembershipdirectory]"
                              dataType="bool"
                              name="ramco_excludefrommembershipdirectory" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_lastupdated]"
                              dataType="dbDate"
                              name="ramco_lastupdated" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licenseexpirationdate]"
                              dataType="dbDate"
                              name="ramco_licenseexpirationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_localorientationdate]"
                              dataType="dbDate"
                              name="ramco_localorientationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_memberstatusdate]"
                              dataType="dbDate"
                              name="ramco_memberstatusdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_membersubclass]"
                              dataType="wstr"
                              length="100"
                              name="ramco_membersubclass" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_mlsassociationid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_mlsassociationid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_mlsid]"
                              dataType="wstr"
                              length="100"
                              name="ramco_mlsid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_mlsstatus]"
                              dataType="i4"
                              name="ramco_mlsstatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nationalduespaiddate]"
                              dataType="dbDate"
                              name="ramco_nationalduespaiddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_officeid]"
                              dataType="guid"
                              name="ramco_officeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_onlinestatus]"
                              dataType="wstr"
                              length="1"
                              name="ramco_onlinestatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_onlinestatusdate]"
                              dataType="dbDate"
                              name="ramco_onlinestatusdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_orientationdate]"
                              dataType="dbDate"
                              name="ramco_orientationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_previousmember]"
                              dataType="bool"
                              name="ramco_previousmember" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_primarymembership]"
                              dataType="bool"
                              name="ramco_primarymembership" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_realestatelicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_realestatelicensename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicensename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_realstatelicensestate]"
                              dataType="guid"
                              name="ramco_realstatelicensestate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_reinstatementcode]"
                              dataType="wstr"
                              length="1"
                              name="ramco_reinstatementcode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_reinstatementdate]"
                              dataType="dbDate"
                              name="ramco_reinstatementdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateassociationid]"
                              dataType="guid"
                              name="ramco_stateassociationid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateduespaiddate]"
                              dataType="dbDate"
                              name="ramco_stateduespaiddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_statusdate]"
                              dataType="dbDate"
                              name="ramco_statusdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_assistantto]"
                              dataType="guid"
                              name="ramcosub_assistantto" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_finemlsid]"
                              dataType="wstr"
                              length="100"
                              name="ramcosub_finemlsid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_matrixagenttypemat]"
                              dataType="i4"
                              name="ramcosub_matrixagenttypemat" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_matrixuserclassmuc]"
                              dataType="i4"
                              name="ramcosub_matrixuserclassmuc" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_mlsemail]"
                              dataType="wstr"
                              length="100"
                              name="ramcosub_mlsemail" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_mlsphone]"
                              dataType="wstr"
                              length="100"
                              name="ramcosub_mlsphone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramcosub_supralagvalue]"
                              dataType="wstr"
                              length="100"
                              name="ramcosub_supralagvalue" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Dynamics CRM Destination Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input].Columns[ramco_core_individualorentity]"
                              cachedDataType="i4"
                              cachedName="ramco_core_individualorentity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentity]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Individuals]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Individuals"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentity]} == 379120000</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ramco_core_individualorentity == 379120000</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Entities]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Entities"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Inputs[Derived Column Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(ramco_licensenumber)</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column 1"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Inputs[Derived Column Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(ramco_realestatelicense)</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Left Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[ramco_licensenumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Left Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[accountid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_licensenumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_statelicenseid]"
                              cachedDataType="guid"
                              cachedName="ramco_statelicenseid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_statelicenseid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Left Input].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[ramco_statelicenseid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output].Columns[ramco_statelicenseid]"
                              name="ramco_statelicenseid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_statelicenseid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Left Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_realestatelicense]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Left Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_membershipid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_licensenumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_statelicenseid]"
                              cachedDataType="guid"
                              cachedName="ramco_statelicenseid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_statelicenseid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Left Input].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_statelicenseid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_statelicenseid]"
                              name="ramco_statelicenseid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_statelicenseid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input].Columns[ramco_core_individualorentity]"
                              cachedDataType="i4"
                              cachedName="ramco_core_individualorentity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentity]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input].Columns[ramco_core_individualorentityname]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="ramco_core_individualorentityname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentityname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input].Columns[ramco_statelicenseid]"
                              cachedDataType="guid"
                              cachedName="ramco_statelicenseid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_statelicenseid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentity]"
                              name="ramco_core_individualorentity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentityname]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_core_individualorentityname]"
                              name="ramco_core_individualorentityname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_core_individualorentityname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_statelicenseid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output].Columns[ramco_statelicenseid]"
                              name="ramco_statelicenseid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output].Columns[ramco_statelicenseid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="160"
                              cachedName="name"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[primarycontactidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="primarycontactidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[primarycontactidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="primarycontactidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[name]"
                              dataType="wstr"
                              length="160"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[name]"
                              name="name">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactid]"
                              name="primarycontactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactidname]"
                              name="primarycontactidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[primarycontactidyominame]"
                              name="primarycontactidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 2"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[cobalt_contactidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="cobalt_contactidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[cobalt_contactidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="cobalt_contactidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[ramco_officeidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_officeidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[ramco_officeidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_officeidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input].Columns[ramco_realestatelicensename]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicensename"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactidname]"
                              name="cobalt_contactidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_contactidyominame]"
                              name="cobalt_contactidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeid]"
                              name="ramco_officeid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeidname]"
                              name="ramco_officeidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_officeidyominame]"
                              name="ramco_officeidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_realestatelicense]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_realestatelicense]"
                              name="ramco_realestatelicense"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_realestatelicensename]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output].Columns[ramco_realestatelicensename]"
                              name="ramco_realestatelicensename">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Derived Column Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Derived Column Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Inputs[Sort Input]"
                      name="Dynamics CRM Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses.Outputs[Dynamics CRM Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1.Inputs[Derived Column Input]"
                      name="Dynamics CRM Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships.Outputs[Dynamics CRM Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column.Inputs[Derived Column Input]"
                      name="Dynamics CRM Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts.Outputs[Dynamics CRM Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Entities]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Right Input]"
                      name="Entities"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Entities]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Individuals]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Right Input]"
                      name="Individuals"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Outputs[Individuals]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Merge Join Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM.Inputs[Dynamics CRM Destination Input]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Merge Join Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM.Inputs[Dynamics CRM Destination Input]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split.Inputs[Conditional Split Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1.Outputs[Sort Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Sequence Container\Log orgName in Console"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{DAB13837-7235-4F22-B61E-357C8706E717}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log orgName in Console"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_26b8829443824bfa80d1f2e6000d82f0"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::orgName">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_26b8829443824bfa80d1f2e6000d82f0.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{02792EF9-8B80-4506-B943-705565DE9C5D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0e12ff607d5349aaadd06609b6da1829</RootNamespace>
    <AssemblyName>ST_26b8829443824bfa80d1f2e6000d82f0</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_0e12ff607d5349aaadd06609b6da1829
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string preBufferLine = Environment.NewLine + "####################################################################################################" + Environment.NewLine;
            string postBufferLine = Environment.NewLine + "####################################################################################################" + Environment.NewLine;
            string orgName = Dts.Variables["User::orgName"].Value.ToString().ToUpper();
            bool fireAgain = true; // Declare the fireAgain variable as a boolean
            Dts.Events.FireInformation(0, "Organization Logging",
                $"{preBufferLine}                         Processing organization: {orgName} {postBufferLine}", string.Empty, 0, ref fireAgain);
            Dts.TaskResult = (int)ScriptResults.Success;
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_26b8829443824bfa80d1f2e6000d82f0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_26b8829443824bfa80d1f2e6000d82f0</msb:DisplayName>
    <msb:ProjectId>{F9C2B185-3733-4B96-8F0F-5A4DC96CD6B3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_26b8829443824bfa80d1f2e6000d82f0.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e12ff607d5349aaadd06609b6da1829.Properties.Settings.get_Default():ST_0e12ff607d5349aaadd06609b6da1829.Properties.Sett" +
    "ings")]

namespace ST_0e12ff607d5349aaadd06609b6da1829.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0e12ff607d5349aaadd06609b6da1829")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0e12ff607d5349aaadd06609b6da1829")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e12ff607d5349aaadd06609b6da1829.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e12ff607d5349aaadd06609b6da1829.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e12ff607d5349aaadd06609b6da1829.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0e12ff607d5349aaadd06609b6da1829.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0e12ff607d5349aaadd06609b6da1829.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_26b8829443824bfa80d1f2e6000d82f0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGnjSWcAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAPjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
MAAAAAAAAEgAAAACAAUAaCEAAMwNAAABAAAAAAAAADQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwCjAAAAAQAAESgQAAAKcgEAAHAoEAAACigRAAAKCigQ
AAAKcgEAAHAoEAAACigRAAAKCwIoEgAACm8TAAAKcswAAHBvFAAACm8VAAAKbxYAAApvFwAACgwX
DQIoEgAACm8YAAAKFnLoAABwG40ZAAABJRYGoiUXchIBAHCiJRgIoiUZcngBAHCiJRoHoigZAAAK
fhoAAAoWEgNvGwAACgIoEgAAChZvHAAACioeAigdAAAKKh4CKB4AAAoqrn4BAAAELR5yfAEAcNAD
AAACKB8AAApvIAAACnMhAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoIgAA
CioucwgAAAaAAwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD4AwAA
I34AAGQEAADcBQAAI1N0cmluZ3MAAAAAQAoAAPABAAAjVVMAMAwAABAAAAAjR1VJRAAAAEAMAACM
AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIAAAAAUAAAAGAAAACQAAAAEA
AAAiAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAApQMBAAAAAAAG
AFUCoQQGAOQCoQQGAKEBjgQPABUFAAAGAM4BMwQGADgCMwQGABkCMwQGAMsCMwQGAHUCMwQGAI4C
MwQGAOUBMwQGAAACEgMKAKkCVAMKACABVAMGAN0D1gMGAIQBjgQGAJoF1gMGAFUEwQQGAEUEHgQO
AFQBjwMOALUBjwMOADwBCQQGAGkBoQQGALwF1gMGAC4D1gMKAH0DVAMSAFcFvwASAJIAvwAKAG0E
VAMGAOsA1gMGAJsA1gMGAMwFMwQAAAAASQAAAAAAAQABAAEAEADuAyUAOQABAAEAAAAQAMgEJAVF
AAEAAwAAARAAYQUkBVkAAwAHAAMBAAB6BQAAPQAEAAoAEQDiA48AEQAQAZMAEQCCAJcABgZxAJsA
VoBqBZ4AVoDwAJ4AUCAAAAAAhgD0AwYAAQD/IAAAAACGGIEEBgABAAchAAAAAIMYgQQGAAEADyEA
AAAAkwhRBKIAAQA7IQAAAACTCPgApwABAEIhAAAAAJMIBAGsAAEASiEAAAAAlgihBbIAAgBRIQAA
AACGGIEEBgACAFkhAAAAAJEYhwS3AAIAAAABAAwDCQCBBAEAEQCBBAYAGQCBBAoAKQCBBBAAMQCB
BBAAOQCBBBAAQQCBBBAASQCBBBAAUQCBBBAAWQCBBBAAYQCBBBAAaQCBBAYAgQCBBAYAqQCBBBUA
uQCBBAYAwQDfACIAyQCTBSYAcQByBS0A0QBTBTIA2QDNAzcA4QACAz0AiQAsA0EAyQBlBEEA0QCI
BUUAyQCTBUoAyQDVBVAA6QD5A1MA0QCtBQEAcQCBBAYAiQCBBAYA8QCtAF4A8QDIBWUAkQCBBGsA
sQCBBAYACAAUAIUACAAYAIoAKQBzAPIALgALAMoALgATANMALgAbAPIALgAjAPsALgArACQBLgAz
ACQBLgA7ACQBLgBDAPsALgBLACoBLgBTACQBLgBbAEEBQwBjAIoASQBzAPIAYQB7AIoAYwBrAIoA
GwADAAEABAADAAAAVQS7AAAAGAHAAAAApQXFAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAAB
AAAAiyOERQAAAAAAAAEAAAAEAAAAAAAAAAAAAABzAHkAAAAAABAAAAAAAAAAAAAAAHwANQMAAAAA
BAAAAAAAAAAAAAAAcwDWAwAAAAAQAAAAAAAAAAAAAAB8AFIAAAAAAAAAAAABAAAA0gQAAAUAAgAA
AABTVF8yNmI4ODI5NDQzODI0YmZhODBkMWYyZTYwMDBkODJmMABTVF8wZTEyZmY2MDdkNTM0OWFh
YWRkMDY2MDliNmRhMTgyOQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBnZXRf
TmV3TGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzI2Yjg4Mjk0NDM4MjRiZmE4MGQxZjJlNjAwMGQ4MmYw
LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAEZpcmVJbmZv
cm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRvVXBwZXIARXZlbnRz
T2JqZWN0V3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8wZTEyZmY2MDdkNTM0OWFh
YWRkMDY2MDliNmRhMTgyOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU1RfMGUxMmZmNjA3ZDUzNDlhYWFkZDA2NjA5YjZkYTE4MjkuUHJvcGVydGllcwBnZXRf
VmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVu
dHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABFbnZpcm9ubWVudABn
ZXRfQXNzZW1ibHkARW1wdHkAAACAySMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAj
ACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMA
IwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAj
ACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAIwAjACMAABtVAHMA
ZQByADoAOgBvAHIAZwBOAGEAbQBlAAApTwByAGcAYQBuAGkAegBhAHQAaQBvAG4AIABMAG8AZwBn
AGkAbgBnAABlIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IABQAHIAbwBjAGUAcwBzAGkAbgBnACAAbwByAGcAYQBuAGkAegBhAHQAaQBvAG4AOgAgAAADIAAA
cVMAVABfADAAZQAxADIAZgBmADYAMAA3AGQANQAzADQAOQBhAGEAYQBkAGQAMAA2ADYAMAA5AGIA
NgBkAGEAMQA4ADIAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AAAX7Dzh0f6xQ7+E/asNwZppAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBgcEDg4OAgMAAA4G
AAMODg4OBCAAEmkEIAASbQUgARJxHAMgABwDIAAOBCAAEnUFAAEOHQ4CBg4KIAYBCA4ODggQAgYA
ARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMG
EhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMGUxMmZmNjA3
ZDUzNDlhYWFkZDA2NjA5YjZkYTE4MjkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABQwAAAAAAAAAAAAAC4wAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAgMAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAIRFiyMAAAEAhEWLIz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMABlADEAMgBmAGYANgAwADcAZAA1ADMANAA5AGEAYQBhAGQAZAAwADYANgAwADkA
YgA2AGQAYQAxADgAMgA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMAA5ADkALgAxADcANwA5ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMgA2AGIAOAA4ADIAOQA0ADQAMwA4ADIANABiAGYAYQA4ADAAZAAxAGYAMgBlADYAMAAw
ADAAZAA4ADIAZgAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAyADYAYgA4ADgAMgA5ADQANAAzADgAMgA0AGIAZgBhADgAMABkADEAZgAy
AGUANgAwADAAMABkADgAMgBmADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AMABlADEAMgBmAGYANgAwADcAZAA1ADMANAA5AGEAYQBhAGQAZAAwADYANgAw
ADkAYgA2AGQAYQAxADgAMgA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA5ADAAOQA5AC4AMQA3ADcAOQA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADAAOQA5AC4AMQA3ADcAOQA2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{7AF3E920-3E22-4F16-B817-217BC10B003E}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Upsert - Entities"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[No Match]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No Match"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(accountid)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Convert Data Types"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_IssueDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_IssueDate]"
                              name="_IssueDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)OriginalLicenseDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]"
                              name="_ExpDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)LicenseExpirationDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]"
                              name="_StatusDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)StatusEffectiveDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]"
                              name="_SecondaryStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]} == "Active" ? 379120000 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]} == "Inactive" ? 379120001 : -1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 379120000 : SecondaryStatus == "Inactive" ? 379120001 : -1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]"
                              name="_PrimaryStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Current" ? 379120000 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Invol Inactive" ? 379120001 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Probation" ? 379120002 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Suspended" ? 379120003 : -1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">PrimaryStatus == "Current" ? 379120000 : PrimaryStatus == "Invol Inactive" ? 379120001 : PrimaryStatus == "Probation" ? 379120002 : PrimaryStatus == "Suspended" ? 379120003 : -1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]"
                              name="_Entity"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">379120001</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">379120001</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Inputs[Derived Column Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(ramco_licensenumber)</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Joiin - Alt Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_licensenumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[accountid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              name="LicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[primarycontactid]"
                              name="primarycontactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input].Columns[primarycontactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Join - Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_licensenumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[accountid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Rank]"
                              name="Rank">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Rank]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              name="LicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[primarycontactid]"
                              name="primarycontactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input].Columns[primarycontactid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1033"
                      name="Read - CSV Entities"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Entities - CSV]"
                          connectionManagerRefId="Package.ConnectionManagers[Entities - CSV]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output].Columns[FileRow]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output].ExternalColumns[FileRow]"
                              length="4000"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output].Columns[FileRow]"
                              name="FileRow"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output].ExternalColumns[FileRow]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="FileRow" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"FileRow", StringComparison.Ordinal))
        {
            FileRow_ProcessInput(new FileRowBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void FileRow_ProcessInput(FileRowBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            FileRow_ProcessInputRow(Buffer);
        }
    }

    public virtual void FileRow_ProcessInputRow(FileRowBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from FileRow.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    private const int ExpectedFieldCount = 21; // Update as necessary
    public override void FileRow_ProcessInputRow(FileRowBuffer Row)
    {


        string line = Row.FileRow;

        string[] fields = CustomCsvSplit(line);

        if (fields != null && fields.Length >= ExpectedFieldCount)
        {
            // Map fields to output columns
            Row.Board = fields[0];
            Row.LicenseeName = fields[1];
            Row.DBAName = fields[2];
            Row.Rank = fields[3];
            Row.Address1 = fields[4];
            Row.Address2 = fields[5];
            Row.Address3 = fields[6];
            Row.City = fields[7];
            Row.State = fields[8];
            Row.Zip = fields[9];
            Row.County = fields[10];
            Row.LicenseNumber = fields[11];
            Row.PrimaryStatus = fields[12];
            Row.SecondaryStatus = fields[13];


            Row.OriginalLicenseDate = ReformatDateString(fields[14]);
            Row.StatusEffectiveDate = ReformatDateString(fields[15]);
            Row.LicenseExpirationDate = ReformatDateString(fields[16]);

            Row.AlternateLicenseNumber = fields[17];
            Row.SelfProprietorsName = fields[18];
            Row.EmployersName = fields[19];
            Row.EmployersLicenseNumber = fields[20];

            // Set IsValidRow to true
            Row.IsValidRow = true;
        }
        else
        {
            // Log a warning
            bool cancel;
            ComponentMetaData.FireWarning(0, "FileRow_ProcessInputRow", $"Skipping line due to parsing error or unexpected field count: {line}", "", 0);
            Row.IsValidRow = false;
        }
    }

    private string[] CustomCsvSplit(string line)
    {
        List<string> fields = new List<string>();
        bool inQuotes = false;
        StringBuilder field = new StringBuilder();

        for (int i = 0; i < line.Length; i++)
        {
            char c = line[i];

            if (c == '"')
            {
                if (inQuotes)
                {
                    if (i + 1 < line.Length && line[i + 1] == '"')
                    {
                        // Escaped quote inside quoted field
                        field.Append('"');
                        i++; // Skip the next quote
                    }
                    else
                    {
                        // Closing quote
                        inQuotes = false;
                    }
                }
                else
                {
                    // Opening quote
                    inQuotes = true;
                }
            }
            else if (c == ',' && !inQuotes)
            {
                // Field separator
                fields.Add(field.ToString());
                field.Clear();
            }
            else
            {
                field.Append(c);
            }
        }

        // Add the last field
        fields.Add(field.ToString());

        // Remove any remaining enclosing quotes and unescape quotes
        for (int i = 0; i < fields.Count; i++)
        {
            fields[i] = UnescapeAndUnquote(fields[i]);
        }

        return fields.ToArray();
    }

    private string UnescapeAndUnquote(string field)
    {
        if (field.StartsWith("\"") && field.EndsWith("\""))
        {
            field = field.Substring(1, field.Length - 2);
        }
        field = field.Replace("\"\"", "\"");
        return field;
    }
    private string ReformatDateString(string dateString)
    {
        if (string.IsNullOrWhiteSpace(dateString))
        {
            return null;
        }

        dateString = dateString.Trim();

        DateTime parsedDate;
        bool fireAgain = true;

        string[] formats = { "dd-MMM-yy", "dd-MMM-yyyy" };

        // Create a custom DateTimeFormatInfo with uppercase month abbreviations
        var dtfi = (System.Globalization.DateTimeFormatInfo)System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.Clone();
        dtfi.AbbreviatedMonthNames = new[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC", "" };
        dtfi.AbbreviatedMonthGenitiveNames = dtfi.AbbreviatedMonthNames;

        // Adjust TwoDigitYearMax if necessary
        dtfi.Calendar.TwoDigitYearMax = 2099;


        // Get the current two-digit year
        int currentYearTwoDigit = DateTime.Now.Year % 100;
        int cutoff = currentYearTwoDigit + 5;
        if (cutoff >= 100)
        {
            cutoff -= 100; // Ensure cutoff stays within two digits
        }

        bool parseSuccess = DateTime.TryParseExact(dateString, formats, dtfi, System.Globalization.DateTimeStyles.None, out parsedDate);

        if (parseSuccess)
        {
            // Determine if the year needs to be adjusted to the previous century
            if (dateString.Length == 9) // "dd-MMM-yy"
            {
                int twoDigitYear = parsedDate.Year % 100;
                if (twoDigitYear > cutoff)
                {
                    parsedDate = parsedDate.AddYears(-100); // Adjust to 1900s
                }
                // Else, keep as 2000s
            }
            // Return the date formatted as "yyyy-MM-dd"
            string reformattedDate = parsedDate.ToString("yyyy-MM-dd");
            //ComponentMetaData.FireInformation(0, "ReformatDateString", $"Reformatted date '{dateString}' to '{reformattedDate}'", "", 0, ref fireAgain);
            return reformattedDate;
        }
        else
        {
            // Handle parsing failure
            ComponentMetaData.FireWarning(0, "ReformatDateString", $"Failed to parse date: '{dateString}'", "", 0);
            return null;
        }
    }





    //public override void CreateNewOutputRows()
    //{
    //    /*
    //      Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
    //      For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
    //    */
    //}

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class FileRowBuffer: ScriptBuffer

{
    public FileRowBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileRow
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FileRow_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String EmployersLicenseNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool EmployersLicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EmployersName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool EmployersName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SelfProprietorsName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool SelfProprietorsName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AlternateLicenseNumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AlternateLicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseExpirationDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool LicenseExpirationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StatusEffectiveDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StatusEffectiveDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OriginalLicenseDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool OriginalLicenseDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SecondaryStatus
    {
        set
        {
            this[8] = value;
        }
    }
    public bool SecondaryStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PrimaryStatus
    {
        set
        {
            this[9] = value;
        }
    }
    public bool PrimaryStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseNumber
    {
        set
        {
            this[10] = value;
        }
    }
    public bool LicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String County
    {
        set
        {
            this[11] = value;
        }
    }
    public bool County_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[14] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address3
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Address3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address1
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Address1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Rank
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Rank_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DBAName
    {
        set
        {
            this[19] = value;
        }
    }
    public bool DBAName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseeName
    {
        set
        {
            this[20] = value;
        }
    }
    public bool LicenseeName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Board
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Board_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsValidRow
    {
        set
        {
            this[22] = value;
        }
    }
    public bool IsValidRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Settings.get_Default():SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Sett" +
    "ings")]

namespace SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_06e23af5db3d4dc7bd0db3513bb42b43</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_06e23af5db3d4dc7bd0db3513bb42b43</msb:DisplayName>
    <msb:ProjectId>{692253A5-24CD-46BE-9797-DBA19E63DF14}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_06e23af5db3d4dc7bd0db3513bb42b43.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_06e23af5db3d4dc7bd0db3513bb42b43")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_06e23af5db3d4dc7bd0db3513bb42b43")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_06e23af5db3d4dc7bd0db3513bb42b43.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C17B9133-91B2-4E45-97B0-398071283B0A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_06e23af5db3d4dc7bd0db3513bb42b43</RootNamespace>
    <AssemblyName>SC_06e23af5db3d4dc7bd0db3513bb42b43</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_06e23af5db3d4dc7bd0db3513bb42b43.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFHTR2cAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAUkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAABHAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
RwAAAAAAAEgAAAACAAUAHCgAACweAAABAAAAAAAAAEhGAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYALAEAAAEAABEDbwkAAAYK
AgYoBAAABgsHOe0AAAAHjmkfFT/jAAAAAwcWmm8zAAAGAwcXmm8xAAAGAwcYmm8vAAAGAwcZmm8t
AAAGAwcamm8rAAAGAwcbmm8pAAAGAwccmm8nAAAGAwcdmm8lAAAGAwcemm8jAAAGAwcfCZpvIQAA
BgMHHwqabx8AAAYDBx8Lmm8dAAAGAwcfDJpvGwAABgMHHw2abxkAAAYDAgcfDpooBgAABm8XAAAG
AwIHHw+aKAYAAAZvFQAABgMCBx8QmigGAAAGbxMAAAYDBx8Rmm8RAAAGAwcfEppvDwAABgMHHxOa
bw0AAAYDBx8Umm8LAAAGAxdvNQAABioCKBIAAAoWcgEAAHByMQAAcAYoEwAACnKvAABwFm8UAAAK
AxZvNQAABioTMAUAxQAAAAIAABFzFQAACgoWC3MWAAAKDBYNK2wDCW8XAAAKEwQRBB8iMzIHLCsJ
F1gDbxgAAAovHAMJF1hvFwAACh8iMw8IHyJvGQAACiYJF1gNKy8WCysrFwsrJxEEHywzGActFQYI
bxoAAApvGwAACghvHAAACiYrCQgRBG8ZAAAKJgkXWA0JA28YAAAKMosGCG8aAAAKbxsAAAoWEwUr
HAYRBQIGEQVvHQAACigFAAAGbx4AAAoRBRdYEwURBQZvHwAACjLaBm8gAAAKKv4DcrEAAHBvIQAA
CiweA3KxAABwbyIAAAosEQMXA28YAAAKGFlvIwAAChABA3K1AABwcrEAAHBvJAAAChABAyoAAAAT
MAYAVQEAAAMAABEDKCUAAAosAhQqA28mAAAKEAEYjR8AAAElFnK7AABwoiUXcs8AAHCiCygnAAAK
bygAAApvKQAACnQRAAABDAgfDY0fAAABJRZy5wAAcKIlF3LvAABwoiUYcvcAAHCiJRly/wAAcKIl
GnIHAQBwoiUbcg8BAHCiJRxyFwEAcKIlHXIfAQBwoiUecicBAHCiJR8Jci8BAHCiJR8KcjcBAHCi
JR8Lcj8BAHCiJR8Mcq8AAHCibyoAAAoICG8rAAAKbywAAAoIby0AAAogMwgAAG8uAAAKKC8AAAoT
BBIEKDAAAAofZF0bWA0JH2QyBQkfZFkNAwcIFhIAKDEAAAosLgNvGAAACh8JMxcSACgwAAAKH2Rd
CTEKEgAfnCgyAAAKChIAckcBAHAoMwAACioCKBIAAAoWcl0BAHBygwEAcANyswEAcCg0AAAKcq8A
AHAWbxQAAAoUKh4CKDkAAAYqKgIDBAUoNQAACipSAns2AAAKAns3AAAKFpRvOAAACioiAhYoOQAA
CiomAhcDKDoAAAoqWgMsCAIXKDsAAAoqcrcBAHBzPAAACnomAhgDKDoAAAoqWgMsCAIYKDsAAAoq
crcBAHBzPAAACnomAhkDKDoAAAoqWgMsCAIZKDsAAAoqcrcBAHBzPAAACnomAhoDKDoAAAoqWgMs
CAIaKDsAAAoqcrcBAHBzPAAACnomAhsDKDoAAAoqWgMsCAIbKDsAAAoqcrcBAHBzPAAACnomAhwD
KDoAAAoqWgMsCAIcKDsAAAoqcrcBAHBzPAAACnomAh0DKDoAAAoqWgMsCAIdKDsAAAoqcrcBAHBz
PAAACnomAh4DKDoAAAoqWgMsCAIeKDsAAAoqcrcBAHBzPAAACnoqAh8JAyg6AAAKKl4DLAkCHwko
OwAACipytwEAcHM8AAAKeioCHwoDKDoAAAoqXgMsCQIfCig7AAAKKnK3AQBwczwAAAp6KgIfCwMo
OgAACipeAywJAh8LKDsAAAoqcrcBAHBzPAAACnoqAh8MAyg6AAAKKl4DLAkCHwwoOwAACipytwEA
cHM8AAAKeioCHw0DKDoAAAoqXgMsCQIfDSg7AAAKKnK3AQBwczwAAAp6KgIfDgMoOgAACipeAywJ
Ah8OKDsAAAoqcrcBAHBzPAAACnoqAh8PAyg6AAAKKl4DLAkCHw8oOwAACipytwEAcHM8AAAKeioC
HxADKDoAAAoqXgMsCQIfECg7AAAKKnK3AQBwczwAAAp6KgIfEQMoOgAACipeAywJAh8RKDsAAAoq
crcBAHBzPAAACnoqAh8SAyg6AAAKKl4DLAkCHxIoOwAACipytwEAcHM8AAAKeioCHxMDKDoAAAoq
XgMsCQIfEyg7AAAKKnK3AQBwczwAAAp6KgIfFAMoOgAACipeAywJAh8UKDsAAAoqcrcBAHBzPAAA
CnoqAh8VAyg6AAAKKl4DLAkCHxUoOwAACipytwEAcHM8AAAKej4CHxYDjCQAAAEoOgAACipeAywJ
Ah8WKDsAAAoqcrcBAHBzPAAACnoeAig9AAAKKh4CKD4AAAoqfgIoPwAACgICcz0AAAZ9AgAABAIC
cz4AAAZ9AwAABCqSBHJUAgBwGm9AAAAKLBUCBQIDKEEAAAoOBHMIAAAGbzsAAAYqSisHAgNvPAAA
BgNvNwAABi3xKgYqOgIoQgAACgIDfQQAAAQqOgIoQgAACgIDfQUAAAQqHgIoQgAACiqufgYAAAQt
HnJkAgBw0AcAAAIoQwAACm9EAAAKc0UAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAA
BCoeAihGAAAKKi5zRAAABoAIAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAAcDAAAI34AAIgMAABIDAAAI1N0cmluZ3MAAAAA0BgAANgCAAAjVVMAqBsAABAAAAAjR1VJRAAA
ALgbAAB0AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAQAAAPoBMwAWAAABAAAAKAAAAAgAAAAIAAAA
RQAAADwAAABGAAAAAQAAABAAAAADAAAAAwAAADEAAAAyAAAAAQAAAAEAAAAFAAAAAQAAAAAA0gQB
AAAAAAAGAGQDLQkGAPgDLQkGALACGgkPAKEJAAAGAN0ChAcGAEcDhAcGACgDhAcGAN8DhAcGAIQD
hAcGAJ0DhAcGAPQChAcGAA8DMwQKALgDewEGABoAnAAGAJgIvAsGAHIBLwcGAM0HbwcKALUIewEO
AKYIewEKAOAHewEKADwLewEGAPAKLwcGAJMCGgkGANQITQkGAMEHbwcSAFACvAQSAMQCvAQSAOQB
WgcGAHgCLQkWAAEA5AgGAIMELwcGACgIbwcGAIgILwcGAOkJbwcGAJYHLwcGAEcHLwcGALAHLwcG
AKIBLwcGAP0ALwcGACsMhAcAAAAAbAAAAAAAAQABAAEAEABPBwAAEAABAAEAAQAQAMIIAABJAAIA
CAABABAAHgsAAFUAAgA5AAEAEACDCgAAWQAEAD0AAQAQAN8JAABZAAUAPgAAABAAVAmwCVkABgA/
AAABEABzCrAJcQAIAEMAUYBWC0QBBgCDCkcBBgDfCUsBAQAsC08BAQAsC08BEQA7B1MBEQC/AVcB
EQDtAFsBUCAAAAAAxgAWBAYAAQBYIAAAAADGACEEBgABAGAgAAAAAMYA6wtfAQEAmCEAAAAAgQAD
C2UBAgBpIgAAAACBAGUC1gADAKwiAAAAAIEAWQTWAAQADSQAAAAAhhgNCQYABQAVJAAAAACGGA0J
4gAFACAkAAAAAIYI3wtYAAgANSQAAAAAhgjgBgQBCAA+JAAAAACGCG0IEAAIAEgkAAAAAIYIdAZr
AQkAXyQAAAAAhgg+ARAACgBpJAAAAACGCHIFawELAIAkAAAAAIYIUAEQAAwAiiQAAAAAhgiLBWsB
DQChJAAAAACGCFIIEAAOAKskAAAAAIYIUgZrAQ8AwiQAAAAAhggsAhAAEADMJAAAAACGCOgFawER
AOMkAAAAAIYIFAIQABIA7SQAAAAAhgjJBWsBEwAEJQAAAACGCPwBEAAUAA4lAAAAAIYIqgVrARUA
JSUAAAAAhgiiChAAFgAvJQAAAACGCJYGawEXAEYlAAAAAIYItgoQABgAUSUAAAAAhgixBmsBGQBp
JQAAAACGCEAIEAAaAHQlAAAAAIYIOQZrARsAjCUAAAAAhgg9DBAAHACXJQAAAACGCAMHawEdAK8l
AAAAAIYIHAgQAB4AuiUAAAAAhggqBmsBHwDSJQAAAACGCEYCEAAgAN0lAAAAAIYICQZrASEA9SUA
AAAAhgg0DBAAIgAAJgAAAACGCPMGawEjABgmAAAAAIYIXwAQACQAIyYAAAAAhggiBWsBJQA7JgAA
AACGCC4AEAAmAEYmAAAAAIYIDgVrAScAXiYAAAAAhgghABAAKABpJgAAAACGCPoEawEpAIEmAAAA
AIYIswQQACoAjCYAAAAAhggaBmsBKwCkJgAAAACGCCEBEAAsAK8mAAAAAIYIRwVrAS0AxyYAAAAA
hggtARAALgDSJgAAAACGCFoFawEvAOomAAAAAIYIyAAQADAA9SYAAAAAhgg2BWsBMQANJwAAAACG
CNALawEyAB0nAAAAAIYIygZrATMANScAAAAAhgADDAQBNAA9JwAAAACGAPcKBAE0AEUnAAAAAIYY
DQkGADQAZScAAAAAxgCvC3ABNACKJwAAAADGAacLXwE4AJ0nAAAAAMYB6wtfATkAnycAAAAAhhgN
CXoBOgCuJwAAAACGGA0JegE7AL0nAAAAAIMYDQkGADwAxScAAAAAkwjQCIABPADxJwAAAACTCKcB
nAA8APgnAAAAAJMIswGFATwAACgAAAAAlggSC4sBPQAHKAAAAACGGA0JBgA9AA8oAAAAAJEYEwmQ
AT0AAAABAAcMAAABAJcBAAABALsAAAABAGwEAAABAMkIAAACAE4KAAADAO4HAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAAB
AC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAAB
AC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAHUAAAACAGgBAAADAMkIAAAEAO4HAAABAMkIAAAB
AAcMAAABAEILAAABAEILAAABAC0ECQANCQEAEQANCQYAGQANCQoAKQANCRAAMQANCRAAOQANCRAA
QQANCRAASQANCRAAUQANCRAAWQANCRAAYQANCRAAaQANCQYAuQANCQYA2QANCRUA6QANCQYAqQAW
BAYAqQAhBAYAqQB9ACEA+QDICiYA8QBNBCwADAANCQYAeQANCQYA+QCYCkkA+QCUBE4AeQDBAFIA
sQB3BFgADAC3AFwAeQA6CGIADAAdB2cADAAmB20ADABMC04ADAAfDHQA+QCoBHoA+QCfBHoA+QCK
BH8A+QDSAIUA+QDaAJcA+QA2B1gAyQDPAZwAyQDPCqEAiQCcAaYAiQA0CqoAiQAaCrAAiQD4CaoA
iQAkCLUAAQELDAEAgQDIC7sAgQAxCE4AgQDiCsAAgQCPCtAAgQB3BNYA+QDICtsAkQANCeIAkQDJ
COwAkQBOCvAAmQCABPQAkQAOB/kAkQAmB/4AkQAVBwEAGQENCRAAkQADDAQBkQD3CgQBqQANCQYA
+QB8CggBqQBiChABsQANCQYAMQEPARYBMQEnDB8BwQANCSUB4QANCQYACAAEAD8BLgALAKsBLgAT
ALQBLgAbANMBLgAjANwBLgArAAUCLgAzAAUCLgA7AAUCLgBDANwBLgBLAAsCLgBTAAUCLgBbACIC
QwBjAGwC4wBrAGwCAQF7AGwC6QVzANMBCQZzANMBGwA1AIsAAwABAAcALwAIADEAAADjC5QBAADk
BpgBAABxCJQBAAB4BpgBAABCAZQBAAB2BZgBAABUAZQBAACPBZgBAABWCJQBAABWBpgBAAAwApQB
AADsBZgBAAAYApQBAADNBZgBAAAAApQBAACuBZgBAACmCpQBAACaBpgBAAC6CpQBAAC1BpgBAAB6
CJQBAACBBpgBAABBDJQBAAAHB5gBAAAgCJQBAAAuBpgBAABfApQBAAANBpgBAAA4DJQBAAD3BpgB
AABjAJQBAAAmBZgBAAAyAJQBAAASBZgBAAAlAJQBAAD+BJgBAAC3BJQBAAAeBpgBAAAlAZQBAABL
BZgBAAAxAZQBAABeBZgBAADMAJQBAAA6BZgBAADUC5gBAADOBpgBAADUCJwBAADcAaEBAAAWC6YB
AgAJAAMAAgAKAAUAAQALAAcAAQAMAAkAAQANAAsAAQAOAA0AAQAPAA8AAQAQABEAAQARABMAAQAS
ABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0AAQAXAB8AAQAYACEAAQAZACMAAQAaACUAAQAbACcA
AQAcACkAAQAdACsAAQAeAC0AAQAfAC8AAQAgADEAAQAhADMAAQAiADUAAQAjADcAAQAkADkAAQAl
ADsAAQAmAD0AAQAnAD8AAQAoAEEAAQApAEMAAQAqAEUAAQArAEcAAQAsAEkAAQAtAEsAAQAuAE0A
AQAvAE8AAQAwAFEAAQAxAFMAAQAyAFUAAQAzAFcAAQA0AFkAAQA1AFsAAQA2AF0AAgBAAF8AAgBB
AGEAAQBCAGEAAgBDAGMAQwAEgAAAAQAAAAAAAAAAAAAAAAA7AAAABAAAAAAAAAAAAAAALQGTAAAA
AAAQAAAAAAAAAAAAAAA2AWkLAAAAABAAAAAAAAAAAAAAADYBhgsAAAAABAAAAAAAAAAAAAAALQEv
BwAAAAAQAAAAAAAAAAAAAAA2AfgHAAAAAAAAAAABAAAAXgkAAAAAAElEVFNDb21wb25lbnRNZXRh
RGF0YTEwMABMaXN0YDEAc2V0X0FkZHJlc3MxAHNldF9BZGRyZXNzMgBTQ18wNmUyM2FmNWRiM2Q0
ZGM3YmQwZGIzNTEzYmI0MmI0MwBzZXRfQWRkcmVzczMAPE1vZHVsZT4ASW5wdXRJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAGZp
ZWxkAEFwcGVuZABzZXRfQm9hcmQAUmVwbGFjZQBJc051bGxPcldoaXRlU3BhY2UAZGVmYXVsdElu
c3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9EQkFOYW1lAHNl
dF9MaWNlbnNlZU5hbWUAc2V0X0VtcGxveWVyc05hbWUAc2V0X1NlbGZQcm9wcmlldG9yc05hbWUA
SW5wdXROYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAENsb25l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlh
bnRDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAHNldF9PcmlnaW5hbExpY2Vuc2VEYXRl
AHNldF9TdGF0dXNFZmZlY3RpdmVEYXRlAHNldF9MaWNlbnNlRXhwaXJhdGlvbkRhdGUAc2V0X1N0
YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFVuZXNjYXBlQW5kVW5xdW90ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
RmlyZVdhcm5pbmcAUmVmb3JtYXREYXRlU3RyaW5nAGRhdGVTdHJpbmcAVG9TdHJpbmcAR2V0U3Ry
aW5nAFN1YnN0cmluZwBnZXRfTGVuZ3RoAEVuZHNXaXRoAFN0YXJ0c1dpdGgAc2V0X1JhbmsAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzA2ZTIzYWY1ZGIzZDRkYzdiZDBkYjM1MTNiYjQyYjQzLmRs
bABzZXRfQWRkcmVzczFfSXNOdWxsAHNldF9BZGRyZXNzMl9Jc051bGwAc2V0X0FkZHJlc3MzX0lz
TnVsbABzZXRfQm9hcmRfSXNOdWxsAHNldF9EQkFOYW1lX0lzTnVsbABzZXRfTGljZW5zZWVOYW1l
X0lzTnVsbABzZXRfRW1wbG95ZXJzTmFtZV9Jc051bGwAc2V0X1NlbGZQcm9wcmlldG9yc05hbWVf
SXNOdWxsAHNldF9PcmlnaW5hbExpY2Vuc2VEYXRlX0lzTnVsbABzZXRfU3RhdHVzRWZmZWN0aXZl
RGF0ZV9Jc051bGwAc2V0X0xpY2Vuc2VFeHBpcmF0aW9uRGF0ZV9Jc051bGwAc2V0X1N0YXRlX0lz
TnVsbABzZXRfUmFua19Jc051bGwAc2V0X1ppcF9Jc051bGwAc2V0X0xpY2Vuc2VOdW1iZXJfSXNO
dWxsAHNldF9BbHRlcm5hdGVMaWNlbnNlTnVtYmVyX0lzTnVsbABzZXRfRW1wbG95ZXJzTGljZW5z
ZU51bWJlcl9Jc051bGwAc2V0X1NlY29uZGFyeVN0YXR1c19Jc051bGwAc2V0X1ByaW1hcnlTdGF0
dXNfSXNOdWxsAHNldF9Jc1ZhbGlkUm93X0lzTnVsbABnZXRfRmlsZVJvd19Jc051bGwAc2V0X0Np
dHlfSXNOdWxsAHNldF9Db3VudHlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lz
dGVtAFRyaW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBEYXRlVGltZUZvcm1hdElu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAAc2V0X1ppcABnZXRfQ2FsZW5kYXIAZ2V0X1llYXIAQ2xlYXIAc2V0X0xpY2Vuc2VOdW1i
ZXIAc2V0X0FsdGVybmF0ZUxpY2Vuc2VOdW1iZXIAc2V0X0VtcGxveWVyc0xpY2Vuc2VOdW1iZXIA
SUZvcm1hdFByb3ZpZGVyAFN0cmluZ0J1aWxkZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVy
AEZpbGVSb3dCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzA2ZTIzYWY1ZGIz
ZDRkYzdiZDBkYjM1MTNiYjQyYjQzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ18wNmUyM2FmNWRiM2Q0ZGM3YmQwZGIzNTEzYmI0MmI0My5Qcm9wZXJ0aWVz
AFZhcmlhYmxlcwBEYXRlVGltZVN0eWxlcwBzZXRfQWJicmV2aWF0ZWRNb250aEdlbml0aXZlTmFt
ZXMAZ2V0X0FiYnJldmlhdGVkTW9udGhOYW1lcwBzZXRfQWJicmV2aWF0ZWRNb250aE5hbWVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVj
dGlvbnMAQWRkWWVhcnMAZ2V0X0NoYXJzAHNldF9TZWNvbmRhcnlTdGF0dXMAc2V0X1ByaW1hcnlT
dGF0dXMAQ29uY2F0AGdldF9EYXRlVGltZUZvcm1hdABUcnlQYXJzZUV4YWN0AE9iamVjdABFbmRP
ZlJvd3NldABDdXN0b21Dc3ZTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0NvdW50AEV4cGVjdGVkRmllbGRDb3VudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AEZpbGVSb3dfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AGdldF9Ob3cAc2V0X0lzVmFsaWRSb3cA
Z2V0X0ZpbGVSb3cARmlsZVJvd19Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBzZXRfVHdvRGlnaXRZ
ZWFyTWF4AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AHNldF9DaXR5AHNldF9Db3VudHkAAC9GAGkAbABl
AFIAbwB3AF8AUAByAG8AYwBlAHMAcwBJAG4AcAB1AHQAUgBvAHcAAH1TAGsAaQBwAHAAaQBuAGcA
IABsAGkAbgBlACAAZAB1AGUAIAB0AG8AIABwAGEAcgBzAGkAbgBnACAAZQByAHIAbwByACAAbwBy
ACAAdQBuAGUAeABwAGUAYwB0AGUAZAAgAGYAaQBlAGwAZAAgAGMAbwB1AG4AdAA6ACAAAAEAAyIA
AAUiACIAABNkAGQALQBNAE0ATQAtAHkAeQABF2QAZAAtAE0ATQBNAC0AeQB5AHkAeQABB0oAQQBO
AAAHRgBFAEIAAAdNAEEAUgAAB0EAUABSAAAHTQBBAFkAAAdKAFUATgAAB0oAVQBMAAAHQQBVAEcA
AAdTAEUAUAAAB08AQwBUAAAHTgBPAFYAAAdEAEUAQwAAFXkAeQB5AHkALQBNAE0ALQBkAGQAASVS
AGUAZgBvAHIAbQBhAHQARABhAHQAZQBTAHQAcgBpAG4AZwAAL0YAYQBpAGwAZQBkACAAdABvACAA
cABhAHIAcwBlACAAZABhAHQAZQA6ACAAJwABAycAAYCbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAAPRgBpAGwAZQBSAG8AdwAAcVMAQwBfADAANgBlADIAMwBhAGYANQBk
AGIAMwBkADQAZABjADcAYgBkADAAZABiADMANQAxADMAYgBiADQAMgBiADQAMwAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADML5pVNRWCQ6URHbOtMqa2AAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFpBQcCDh0OBCAAEnkFAAIODg4IIAUBCA4ODggNBwYVEjkBDgIS
PQgDCAUVEjkBDgQgAQMIAyAACAUgARI9AwMgAA4FIAEBEwAEIAASPQUgARMACAYgAgEIEwAFIAAd
EwAEIAECDgUgAg4ICAUgAg4ODgsHBRFBHQ4SRQgRQQQAAQIOBAAAEmUEIAASRQMgABwFIAEBHQ4E
IAAdDgUgABKAgQQAABFBDwAFAg4dDhKAhRGAiRARQQUgARFBCAQgAQ4OBgADDg4ODgkgAwESTR0I
ElEDBhJNAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACByACAg4RgJUFIAEdCAgIAAESgJkRgJ0FIAAS
gKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQVAAAAAgYIAwYSFAMGEhgDBhJVAwYSYQMGEmUD
BhIgBSABARIMBSABHQ4OBCABAQIJIAQBCA4STRJRBSABARJVBAAAEmEFAAEBEmUEAAASIAMAAAED
KAAOAygAAgQIABJhBAgAEmUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfMDZlMjNhZjVkYjNkNGRjN2JkMGRiMzUxM2JiNDJiNDMAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAAoRwAAAAAAAAAAAABCRwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANEcAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADAA
NgBlADIAMwBhAGYANQBkAGIAMwBkADQAZABjADcAYgBkADAAZABiADMANQAxADMAYgBiADQAMgBi
ADQAMwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA2AGUAMgAzAGEAZgA1AGQAYgAz
AGQANABkAGMANwBiAGQAMABkAGIAMwA1ADEAMwBiAGIANAAyAGIANAAzAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADYAZQAyADMAYQBm
ADUAZABiADMAZAA0AGQAYwA3AGIAZAAwAGQAYgAzADUAMQAzAGIAYgA0ADIAYgA0ADMALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA2AGUAMgAzAGEAZgA1
AGQAYgAzAGQANABkAGMANwBiAGQAMABkAGIAMwA1ADEAMwBiAGIANAAyAGIANAAzAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABUNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_06e23af5db3d4dc7bd0db3513bb42b43</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">29</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Inputs[FileRow]"
                          hasSideEffects="true"
                          name="FileRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Inputs[FileRow].Columns[FileRow]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="FileRow"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output].Columns[FileRow]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns]"
                          name="ParsedColumns"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Inputs[FileRow]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              name="EmployersLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output]"
                              name="EmployersName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1002:invalid"
                              name="SelfProprietorsName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              name="AlternateLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseNumber]"
                              name="LicenseExpirationDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                              name="StatusEffectiveDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults"
                              name="OriginalLicenseDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1003:invalid"
                              name="SecondaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1004:invalid"
                              name="PrimaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1005:invalid"
                              name="LicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[County]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1006:invalid"
                              name="County" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Zip]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1007:invalid"
                              name="Zip" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[State]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1008:invalid"
                              name="State" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[City]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1009:invalid"
                              name="City" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address3]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output]"
                              name="Address3" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address2]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address1]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1010:invalid"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Rank]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="Rank" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[DBAName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\1011:invalid"
                              name="DBAName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="LicenseeName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Board]"
                              name="Board" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ErrorOutput]"
                          name="ErrorOutput"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Inputs[FileRow]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ErrorOutput].Columns[IsValidRow]"
                              dataType="bool"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ErrorOutput].Columns[IsValidRow]"
                              name="IsValidRow" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - Alt Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[primarycontactid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              name="LicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[primarycontactid]"
                              name="primarycontactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[primarycontactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - RAMCO Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="160"
                              cachedName="name"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[primarycontactidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="primarycontactidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[primarycontactidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="primarycontactidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_licensenumber]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_licensenumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[accountid]"
                              name="accountid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[name]"
                              dataType="wstr"
                              length="160"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[name]"
                              name="name">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactid]"
                              name="primarycontactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactidname]"
                              name="primarycontactidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[primarycontactidyominame]"
                              name="primarycontactidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - REC Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Board]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[DBAName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address1]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address2]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[City]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[State]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Zip]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[County]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Rank]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address3]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]"
                              name="Rank">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Rank]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              name="LicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Trim &amp; Set Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(LicenseNumber)</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(AlternateLicenseNumber)</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(LicenseNumber)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]"
                              name="Statecode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]} == "Active" ? 0 : 1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 0 : 1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">379120001</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">379120001</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]"
                              name="recordName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]} + " - " + #{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">LicenseeName + " - " + LicenseNumber</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]"
                              dataType="guid"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]"
                              name="flState"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_GUID)("{" + "D431E2D7-EF20-E111-B470-00155D000140" + "}")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_GUID)("{" + "D431E2D7-EF20-E111-B470-00155D000140" + "}")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]"
                              name="Statuscode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]} == "Active" ? 1 : 2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 1 : 2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statecode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[recordName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Board]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[DBAName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address1]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address2]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[State]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Zip]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[County]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Rank]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Rank]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[flState]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseeName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address3]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statuscode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[accountid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output].Columns[primarycontactid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[primarycontactid]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[recordName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[State]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Zip]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[County]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Board]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[DBAName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address1]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address2]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[flState]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statecode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address3]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseeName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statuscode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[primarycontactid]"
                              cachedDataType="guid"
                              cachedName="primarycontactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[primarycontactid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[primarycontactid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output].Columns[accountid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountid]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statecode]"
                              name="Statecode" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[recordName]"
                              name="recordName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Board]"
                              name="Board" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersName]"
                              name="EmployersName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[DBAName]"
                              name="DBAName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address1]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address2]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[City]"
                              name="City" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[State]"
                              name="State" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Zip]"
                              name="Zip" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[County]"
                              name="County" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]"
                              name="PrimaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Rank]"
                              name="Rank" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[flState]"
                              name="flState" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseeName]"
                              name="LicenseeName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address3]"
                              name="Address3" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]"
                              name="LicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]"
                              name="SecondaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statuscode]"
                              name="Statuscode" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountid]"
                              name="accountid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[primarycontactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[primarycontactid]"
                              name="primarycontactid" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Populates Dynamics CRM destination entity.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Populates Dynamics CRM destination entity."
                      name="Upsert - Entites - Write to CRM"
                      usesDispositions="true">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmDestinationDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.String"
                          description="Destination entity to load."
                          expressionType="Notify"
                          name="DestinationEntity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor">ramco_statelicense</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies destination action type."
                          name="Action"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmDestination+ActionTypes">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if missing object identifiers are ignored."
                          name="IgnoreMissingIdentifier">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if duplicate detection rules are active during create or update."
                          name="DetectDuplicate">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of rows to be sent as a batch to the service."
                          name="BatchSize">200</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to handle multiple match records."
                          name="MultipleMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMulti">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if unchanged attributes are ignored."
                          name="IgnoreUnchanged">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies records matching criteria for Upsert action."
                          name="UpsertMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMatch">1</property>
                        <property
                          dataType="System.String"
                          description="Select alternate keys to match records for Upsert action."
                          name="UpsertAlternateKeys"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.ListEditor">ramco_licensenumber</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies to ignore columns containing NULL value."
                          name="IgnoreNullValue">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Dynamics CRM Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Statuscode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_name]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nameonlicense]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_StatusDate]"
                              cachedDataType="dbDate"
                              cachedName="_StatusDate"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_statuseffectivedate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SelfProprietorsName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_selfproprietorsname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_countyname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="AlternateLicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_alternatelicensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[accountid]"
                              cachedDataType="guid"
                              cachedName="accountid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_office]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[accountid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Address1"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet1]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet2]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Zip"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresszip]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresscity]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_ExpDate]"
                              cachedDataType="dbDate"
                              cachedName="_ExpDate"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licenseexpirationdate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerdbaname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerlicensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_Entity]"
                              cachedDataType="i4"
                              cachedName="_Entity"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_individualorentity]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employername]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_PrimaryStatus]"
                              cachedDataType="i4"
                              cachedName="_PrimaryStatus"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_primarystatus]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_SecondaryStatus]"
                              cachedDataType="i4"
                              cachedName="_SecondaryStatus"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_secondarystatus]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[importsequencenumber]"
                              dataType="i4"
                              name="importsequencenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[overriddencreatedon]"
                              dataType="dbDate"
                              name="overriddencreatedon" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ownerid]"
                              dataType="guid"
                              name="ownerid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[owneridtype]"
                              dataType="wstr"
                              length="250"
                              name="owneridtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_contactid]"
                              dataType="guid"
                              name="ramco_contactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerdbaname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerdbaname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerlicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerlicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employername]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employername" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerphone]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerphone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_firstname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_firstname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_individualorentity]"
                              dataType="i4"
                              name="ramco_core_individualorentity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_lastname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_lastname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licenseexpirationdate]"
                              dataType="dbDate"
                              name="ramco_core_licenseexpirationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licensereneweddate]"
                              dataType="dbDate"
                              name="ramco_core_licensereneweddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresscity]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddresscity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet1]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstreet1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet2]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstreet2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresszip]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddresszip" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_middlename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_middlename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_office]"
                              dataType="guid"
                              name="ramco_core_office" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_alternatelicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_alternatelicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_countyname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_countyname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_dbaname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_dbaname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_employerslicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_employerslicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_employersname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_employersname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_primarystatus]"
                              dataType="i4"
                              name="ramco_fl_primarystatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_rank]"
                              dataType="i4"
                              name="ramco_fl_rank" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_secondarystatus]"
                              dataType="i4"
                              name="ramco_fl_secondarystatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_selfproprietorsname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_selfproprietorsname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_statuseffectivedate]"
                              dataType="dbDate"
                              name="ramco_fl_statuseffectivedate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licenseissuedate]"
                              dataType="dbDate"
                              name="ramco_licenseissuedate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_name]"
                              dataType="wstr"
                              length="100"
                              name="ramco_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nameonlicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nameonlicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateid]"
                              dataType="guid"
                              name="ramco_stateid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_statelicenseid]"
                              dataType="guid"
                              name="ramco_statelicenseid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              dataType="i4"
                              name="statecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              dataType="i4"
                              name="statuscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[timezoneruleversionnumber]"
                              dataType="i4"
                              name="timezoneruleversionnumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[utcconversiontimezonecode]"
                              dataType="i4"
                              name="utcconversiontimezonecode" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Dynamics CRM Destination Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from Dynamics CRM services.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Extracts data from Dynamics CRM services."
                      name="Upsert - Entities - Get - Accounts">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmSourceDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies query batch size."
                          name="BatchSize">500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to access the service."
                          name="InputType"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmSource+InputTypes">1</property>
                        <property
                          dataType="System.String"
                          description="Dynamics CRM entity."
                          expressionType="Notify"
                          name="Entity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor"></property>
                        <property
                          dataType="System.String"
                          description="FetchXML statement."
                          expressionType="Notify"
                          name="FetchXML"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.CrmStatementEditor">&lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
  &lt;entity name="account"&gt;
    &lt;attribute name="name" /&gt;
    &lt;attribute name="accountid" /&gt;
    &lt;attribute name="primarycontactid" /&gt;
    &lt;attribute name="ramco_licensenumber" /&gt;
    &lt;order attribute="name" descending="false" /&gt;
    &lt;filter type="and"&gt;
    &lt;condition attribute="ramco_licensenumber" operator="not-null" /&gt;
    &lt;/filter&gt;
  &lt;/entity&gt;
&lt;/fetch&gt;</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection Manager"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output]"
                          name="Dynamics CRM Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[accountid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[accountid]"
                              name="accountid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[name]"
                              length="160"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactid]"
                              name="primarycontactid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidname]"
                              name="primarycontactidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[primarycontactidyominame]"
                              name="primarycontactidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].Columns[ramco_licensenumber]"
                              name="ramco_licensenumber" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[accountid]"
                              dataType="guid"
                              name="accountid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[name]"
                              dataType="wstr"
                              length="160"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactid]"
                              dataType="guid"
                              name="primarycontactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidname]"
                              dataType="wstr"
                              length="100"
                              name="primarycontactidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[primarycontactidyominame]"
                              dataType="wstr"
                              length="100"
                              name="primarycontactidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Conditional Split Default Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 1]"
                      name="Conditional Split Default Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM.Inputs[Dynamics CRM Destination Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Dynamics CRM Source Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column.Inputs[Derived Column Input]"
                      name="Dynamics CRM Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts.Outputs[Dynamics CRM Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Flat File Source Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Inputs[FileRow]"
                      name="Flat File Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Merge Join Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Merge Join Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Inputs[Union All Input 2]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Multicast Output 1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Right Input]"
                      name="Multicast Output 1"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Multicast Output 2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Right Input]"
                      name="Multicast Output 2"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[No Match]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Inputs[Sort Input]"
                      name="No Match"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split.Outputs[No Match]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[ParsedColumns]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                      name="ParsedColumns"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component.Outputs[ParsedColumns]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast.Inputs[Multicast Input 1]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Union All Output 1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types.Inputs[Derived Column Input]"
                      name="Union All Output 1"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All.Outputs[Union All Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{D878B6B4-DFC6-4D44-98FC-F9A3B606FEEB}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Upsert - Individuals"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[ramco_officeid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[No Match]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No Match"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[ramco_officeid]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(ramco_officeid)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Convert Data Types"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_IssueDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_IssueDate]"
                              name="_IssueDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)OriginalLicenseDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]"
                              name="_ExpDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)LicenseExpirationDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]"
                              dataType="dbDate"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]"
                              name="_StatusDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_DBDATE)StatusEffectiveDate</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]"
                              name="_SecondaryStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]} == "Active" ? 379120000 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]} == "Inactive" ? 379120001 : -1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 379120000 : SecondaryStatus == "Inactive" ? 379120001 : -1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]"
                              name="_PrimaryStatus"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Current" ? 379120000 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Invol Inactive" ? 379120001 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Probation" ? 379120002 : #{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]} == "Suspended" ? 379120003 : -1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">PrimaryStatus == "Current" ? 379120000 : PrimaryStatus == "Invol Inactive" ? 379120001 : PrimaryStatus == "Probation" ? 379120002 : PrimaryStatus == "Suspended" ? 379120003 : -1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]"
                              name="_Entity"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">379120000</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">379120000</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Inputs[Derived Column Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(ramco_realestatelicense)</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicense]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_membershipid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Rank]"
                              name="Rank">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Rank]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              name="LicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[cobalt_contactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[ramco_officeid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[ramco_officeid]"
                              name="ramco_officeid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input].Columns[ramco_officeid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicense]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_membershipid]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseNumber]"
                              name="LicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[cobalt_contactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_officeid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_officeid]"
                              name="ramco_officeid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input].Columns[ramco_officeid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Outputs[Multicast Output 3]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Outputs[Multicast Output 2]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1033"
                      name="Read - CSV Licensees"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Licensees - CSV]"
                          connectionManagerRefId="Package.ConnectionManagers[Licensees - CSV]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output].Columns[FileRow]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output].ExternalColumns[FileRow]"
                              length="4000"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output].Columns[FileRow]"
                              name="FileRow"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output].ExternalColumns[FileRow]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="FileRow" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"FileRow", StringComparison.Ordinal))
        {
            FileRow_ProcessInput(new FileRowBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void FileRow_ProcessInput(FileRowBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            FileRow_ProcessInputRow(Buffer);
        }
    }

    public virtual void FileRow_ProcessInputRow(FileRowBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from FileRow.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    private const int ExpectedFieldCount = 21; // Update as necessary
    public override void FileRow_ProcessInputRow(FileRowBuffer Row)
    {


        string line = Row.FileRow;

        string[] fields = CustomCsvSplit(line);

        if (fields != null && fields.Length >= ExpectedFieldCount)
        {
            // Map fields to output columns
            Row.Board = fields[0];
            Row.LicenseeName = fields[1];
            Row.DBAName = fields[2];
            Row.Rank = fields[3];
            Row.Address1 = fields[4];
            Row.Address2 = fields[5];
            Row.Address3 = fields[6];
            Row.City = fields[7];
            Row.State = fields[8];
            Row.Zip = fields[9];
            Row.County = fields[10];
            Row.LicenseNumber = fields[11];
            Row.PrimaryStatus = fields[12];
            Row.SecondaryStatus = fields[13];


            Row.OriginalLicenseDate = ReformatDateString(fields[14]);
            Row.StatusEffectiveDate = ReformatDateString(fields[15]);
            Row.LicenseExpirationDate = ReformatDateString(fields[16]);

            Row.AlternateLicenseNumber = fields[17];
            Row.SelfProprietorsName = fields[18];
            Row.EmployersName = fields[19];
            Row.EmployersLicenseNumber = fields[20];

            // Set IsValidRow to true
            Row.IsValidRow = true;
        }
        else
        {
            // Log a warning
            bool cancel;
            ComponentMetaData.FireWarning(0, "FileRow_ProcessInputRow", $"Skipping line due to parsing error or unexpected field count: {line}", "", 0);
            Row.IsValidRow = false;
        }
    }

    private string[] CustomCsvSplit(string line)
    {
        List<string> fields = new List<string>();
        bool inQuotes = false;
        StringBuilder field = new StringBuilder();

        for (int i = 0; i < line.Length; i++)
        {
            char c = line[i];

            if (c == '"')
            {
                if (inQuotes)
                {
                    if (i + 1 < line.Length && line[i + 1] == '"')
                    {
                        // Escaped quote inside quoted field
                        field.Append('"');
                        i++; // Skip the next quote
                    }
                    else
                    {
                        // Closing quote
                        inQuotes = false;
                    }
                }
                else
                {
                    // Opening quote
                    inQuotes = true;
                }
            }
            else if (c == ',' && !inQuotes)
            {
                // Field separator
                fields.Add(field.ToString());
                field.Clear();
            }
            else
            {
                field.Append(c);
            }
        }

        // Add the last field
        fields.Add(field.ToString());

        // Remove any remaining enclosing quotes and unescape quotes
        for (int i = 0; i < fields.Count; i++)
        {
            fields[i] = UnescapeAndUnquote(fields[i]);
        }

        return fields.ToArray();
    }

    private string UnescapeAndUnquote(string field)
    {
        if (field.StartsWith("\"") && field.EndsWith("\""))
        {
            field = field.Substring(1, field.Length - 2);
        }
        field = field.Replace("\"\"", "\"");
        return field;
    }
    private string ReformatDateString(string dateString)
    {
        if (string.IsNullOrWhiteSpace(dateString))
        {
            return null;
        }

        dateString = dateString.Trim();

        DateTime parsedDate;
        bool fireAgain = true;

        string[] formats = { "dd-MMM-yy", "dd-MMM-yyyy" };

        // Create a custom DateTimeFormatInfo with uppercase month abbreviations
        var dtfi = (System.Globalization.DateTimeFormatInfo)System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.Clone();
        dtfi.AbbreviatedMonthNames = new[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC", "" };
        dtfi.AbbreviatedMonthGenitiveNames = dtfi.AbbreviatedMonthNames;

        // Adjust TwoDigitYearMax if necessary
        dtfi.Calendar.TwoDigitYearMax = 2099;


        // Get the current two-digit year
        int currentYearTwoDigit = DateTime.Now.Year % 100;
        int cutoff = currentYearTwoDigit + 5;
        if (cutoff >= 100)
        {
            cutoff -= 100; // Ensure cutoff stays within two digits
        }

        bool parseSuccess = DateTime.TryParseExact(dateString, formats, dtfi, System.Globalization.DateTimeStyles.None, out parsedDate);

        if (parseSuccess)
        {
            // Determine if the year needs to be adjusted to the previous century
            if (dateString.Length == 9) // "dd-MMM-yy"
            {
                int twoDigitYear = parsedDate.Year % 100;
                if (twoDigitYear > cutoff)
                {
                    parsedDate = parsedDate.AddYears(-100); // Adjust to 1900s
                }
                // Else, keep as 2000s
            }
            // Return the date formatted as "yyyy-MM-dd"
            string reformattedDate = parsedDate.ToString("yyyy-MM-dd");
            //ComponentMetaData.FireInformation(0, "ReformatDateString", $"Reformatted date '{dateString}' to '{reformattedDate}'", "", 0, ref fireAgain);
            return reformattedDate;
        }
        else
        {
            // Handle parsing failure
            ComponentMetaData.FireWarning(0, "ReformatDateString", $"Failed to parse date: '{dateString}'", "", 0);
            return null;
        }
    }





    //public override void CreateNewOutputRows()
    //{
    //    /*
    //      Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
    //      For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
    //    */
    //}

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class FileRowBuffer: ScriptBuffer

{
    public FileRowBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileRow
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FileRow_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String EmployersLicenseNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool EmployersLicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EmployersName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool EmployersName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SelfProprietorsName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool SelfProprietorsName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AlternateLicenseNumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AlternateLicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseExpirationDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool LicenseExpirationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StatusEffectiveDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StatusEffectiveDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OriginalLicenseDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool OriginalLicenseDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SecondaryStatus
    {
        set
        {
            this[8] = value;
        }
    }
    public bool SecondaryStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PrimaryStatus
    {
        set
        {
            this[9] = value;
        }
    }
    public bool PrimaryStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseNumber
    {
        set
        {
            this[10] = value;
        }
    }
    public bool LicenseNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String County
    {
        set
        {
            this[11] = value;
        }
    }
    public bool County_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[13] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[14] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address3
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Address3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address1
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Address1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Rank
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Rank_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DBAName
    {
        set
        {
            this[19] = value;
        }
    }
    public bool DBAName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LicenseeName
    {
        set
        {
            this[20] = value;
        }
    }
    public bool LicenseeName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Board
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Board_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsValidRow
    {
        set
        {
            this[22] = value;
        }
    }
    public bool IsValidRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Settings.get_Default():SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Sett" +
    "ings")]

namespace SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_06e23af5db3d4dc7bd0db3513bb42b43</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_06e23af5db3d4dc7bd0db3513bb42b43</msb:DisplayName>
    <msb:ProjectId>{630E16CF-56DB-4E93-9410-914F8656DD01}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_06e23af5db3d4dc7bd0db3513bb42b43.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_06e23af5db3d4dc7bd0db3513bb42b43")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_06e23af5db3d4dc7bd0db3513bb42b43")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_06e23af5db3d4dc7bd0db3513bb42b43.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C17B9133-91B2-4E45-97B0-398071283B0A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_06e23af5db3d4dc7bd0db3513bb42b43</RootNamespace>
    <AssemblyName>SC_06e23af5db3d4dc7bd0db3513bb42b43</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_06e23af5db3d4dc7bd0db3513bb42b43.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_06e23af5db3d4dc7bd0db3513bb42b43.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIkPSGcAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAUkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAABHAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
RwAAAAAAAEgAAAACAAUAHCgAACweAAABAAAAAAAAAEhGAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYALAEAAAEAABEDbwkAAAYK
AgYoBAAABgsHOe0AAAAHjmkfFT/jAAAAAwcWmm8zAAAGAwcXmm8xAAAGAwcYmm8vAAAGAwcZmm8t
AAAGAwcamm8rAAAGAwcbmm8pAAAGAwccmm8nAAAGAwcdmm8lAAAGAwcemm8jAAAGAwcfCZpvIQAA
BgMHHwqabx8AAAYDBx8Lmm8dAAAGAwcfDJpvGwAABgMHHw2abxkAAAYDAgcfDpooBgAABm8XAAAG
AwIHHw+aKAYAAAZvFQAABgMCBx8QmigGAAAGbxMAAAYDBx8Rmm8RAAAGAwcfEppvDwAABgMHHxOa
bw0AAAYDBx8Umm8LAAAGAxdvNQAABioCKBIAAAoWcgEAAHByMQAAcAYoEwAACnKvAABwFm8UAAAK
AxZvNQAABioTMAUAxQAAAAIAABFzFQAACgoWC3MWAAAKDBYNK2wDCW8XAAAKEwQRBB8iMzIHLCsJ
F1gDbxgAAAovHAMJF1hvFwAACh8iMw8IHyJvGQAACiYJF1gNKy8WCysrFwsrJxEEHywzGActFQYI
bxoAAApvGwAACghvHAAACiYrCQgRBG8ZAAAKJgkXWA0JA28YAAAKMosGCG8aAAAKbxsAAAoWEwUr
HAYRBQIGEQVvHQAACigFAAAGbx4AAAoRBRdYEwURBQZvHwAACjLaBm8gAAAKKv4DcrEAAHBvIQAA
CiweA3KxAABwbyIAAAosEQMXA28YAAAKGFlvIwAAChABA3K1AABwcrEAAHBvJAAAChABAyoAAAAT
MAYAVQEAAAMAABEDKCUAAAosAhQqA28mAAAKEAEYjR8AAAElFnK7AABwoiUXcs8AAHCiCygnAAAK
bygAAApvKQAACnQRAAABDAgfDY0fAAABJRZy5wAAcKIlF3LvAABwoiUYcvcAAHCiJRly/wAAcKIl
GnIHAQBwoiUbcg8BAHCiJRxyFwEAcKIlHXIfAQBwoiUecicBAHCiJR8Jci8BAHCiJR8KcjcBAHCi
JR8Lcj8BAHCiJR8Mcq8AAHCibyoAAAoICG8rAAAKbywAAAoIby0AAAogMwgAAG8uAAAKKC8AAAoT
BBIEKDAAAAofZF0bWA0JH2QyBQkfZFkNAwcIFhIAKDEAAAosLgNvGAAACh8JMxcSACgwAAAKH2Rd
CTEKEgAfnCgyAAAKChIAckcBAHAoMwAACioCKBIAAAoWcl0BAHBygwEAcANyswEAcCg0AAAKcq8A
AHAWbxQAAAoUKh4CKDkAAAYqKgIDBAUoNQAACipSAns2AAAKAns3AAAKFpRvOAAACioiAhYoOQAA
CiomAhcDKDoAAAoqWgMsCAIXKDsAAAoqcrcBAHBzPAAACnomAhgDKDoAAAoqWgMsCAIYKDsAAAoq
crcBAHBzPAAACnomAhkDKDoAAAoqWgMsCAIZKDsAAAoqcrcBAHBzPAAACnomAhoDKDoAAAoqWgMs
CAIaKDsAAAoqcrcBAHBzPAAACnomAhsDKDoAAAoqWgMsCAIbKDsAAAoqcrcBAHBzPAAACnomAhwD
KDoAAAoqWgMsCAIcKDsAAAoqcrcBAHBzPAAACnomAh0DKDoAAAoqWgMsCAIdKDsAAAoqcrcBAHBz
PAAACnomAh4DKDoAAAoqWgMsCAIeKDsAAAoqcrcBAHBzPAAACnoqAh8JAyg6AAAKKl4DLAkCHwko
OwAACipytwEAcHM8AAAKeioCHwoDKDoAAAoqXgMsCQIfCig7AAAKKnK3AQBwczwAAAp6KgIfCwMo
OgAACipeAywJAh8LKDsAAAoqcrcBAHBzPAAACnoqAh8MAyg6AAAKKl4DLAkCHwwoOwAACipytwEA
cHM8AAAKeioCHw0DKDoAAAoqXgMsCQIfDSg7AAAKKnK3AQBwczwAAAp6KgIfDgMoOgAACipeAywJ
Ah8OKDsAAAoqcrcBAHBzPAAACnoqAh8PAyg6AAAKKl4DLAkCHw8oOwAACipytwEAcHM8AAAKeioC
HxADKDoAAAoqXgMsCQIfECg7AAAKKnK3AQBwczwAAAp6KgIfEQMoOgAACipeAywJAh8RKDsAAAoq
crcBAHBzPAAACnoqAh8SAyg6AAAKKl4DLAkCHxIoOwAACipytwEAcHM8AAAKeioCHxMDKDoAAAoq
XgMsCQIfEyg7AAAKKnK3AQBwczwAAAp6KgIfFAMoOgAACipeAywJAh8UKDsAAAoqcrcBAHBzPAAA
CnoqAh8VAyg6AAAKKl4DLAkCHxUoOwAACipytwEAcHM8AAAKej4CHxYDjCQAAAEoOgAACipeAywJ
Ah8WKDsAAAoqcrcBAHBzPAAACnoeAig9AAAKKh4CKD4AAAoqfgIoPwAACgICcz0AAAZ9AgAABAIC
cz4AAAZ9AwAABCqSBHJUAgBwGm9AAAAKLBUCBQIDKEEAAAoOBHMIAAAGbzsAAAYqSisHAgNvPAAA
BgNvNwAABi3xKgYqOgIoQgAACgIDfQQAAAQqOgIoQgAACgIDfQUAAAQqHgIoQgAACiqufgYAAAQt
HnJkAgBw0AcAAAIoQwAACm9EAAAKc0UAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAA
BCoeAihGAAAKKi5zRAAABoAIAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAAcDAAAI34AAIgMAABIDAAAI1N0cmluZ3MAAAAA0BgAANgCAAAjVVMAqBsAABAAAAAjR1VJRAAA
ALgbAAB0AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAQAAAPoBMwAWAAABAAAAKAAAAAgAAAAIAAAA
RQAAADwAAABGAAAAAQAAABAAAAADAAAAAwAAADEAAAAyAAAAAQAAAAEAAAAFAAAAAQAAAAAA0gQB
AAAAAAAGAGQDLQkGAPgDLQkGALACGgkPAKEJAAAGAN0ChAcGAEcDhAcGACgDhAcGAN8DhAcGAIQD
hAcGAJ0DhAcGAPQChAcGAA8DMwQKALgDewEGABoAnAAGAJgIvAsGAHIBLwcGAM0HbwcKALUIewEO
AKYIewEKAOAHewEKADwLewEGAPAKLwcGAJMCGgkGANQITQkGAMEHbwcSAFACvAQSAMQCvAQSAOQB
WgcGAHgCLQkWAAEA5AgGAIMELwcGACgIbwcGAIgILwcGAOkJbwcGAJYHLwcGAEcHLwcGALAHLwcG
AKIBLwcGAP0ALwcGACsMhAcAAAAAbAAAAAAAAQABAAEAEABPBwAAEAABAAEAAQAQAMIIAABJAAIA
CAABABAAHgsAAFUAAgA5AAEAEACDCgAAWQAEAD0AAQAQAN8JAABZAAUAPgAAABAAVAmwCVkABgA/
AAABEABzCrAJcQAIAEMAUYBWC0QBBgCDCkcBBgDfCUsBAQAsC08BAQAsC08BEQA7B1MBEQC/AVcB
EQDtAFsBUCAAAAAAxgAWBAYAAQBYIAAAAADGACEEBgABAGAgAAAAAMYA6wtfAQEAmCEAAAAAgQAD
C2UBAgBpIgAAAACBAGUC1gADAKwiAAAAAIEAWQTWAAQADSQAAAAAhhgNCQYABQAVJAAAAACGGA0J
4gAFACAkAAAAAIYI3wtYAAgANSQAAAAAhgjgBgQBCAA+JAAAAACGCG0IEAAIAEgkAAAAAIYIdAZr
AQkAXyQAAAAAhgg+ARAACgBpJAAAAACGCHIFawELAIAkAAAAAIYIUAEQAAwAiiQAAAAAhgiLBWsB
DQChJAAAAACGCFIIEAAOAKskAAAAAIYIUgZrAQ8AwiQAAAAAhggsAhAAEADMJAAAAACGCOgFawER
AOMkAAAAAIYIFAIQABIA7SQAAAAAhgjJBWsBEwAEJQAAAACGCPwBEAAUAA4lAAAAAIYIqgVrARUA
JSUAAAAAhgiiChAAFgAvJQAAAACGCJYGawEXAEYlAAAAAIYItgoQABgAUSUAAAAAhgixBmsBGQBp
JQAAAACGCEAIEAAaAHQlAAAAAIYIOQZrARsAjCUAAAAAhgg9DBAAHACXJQAAAACGCAMHawEdAK8l
AAAAAIYIHAgQAB4AuiUAAAAAhggqBmsBHwDSJQAAAACGCEYCEAAgAN0lAAAAAIYICQZrASEA9SUA
AAAAhgg0DBAAIgAAJgAAAACGCPMGawEjABgmAAAAAIYIXwAQACQAIyYAAAAAhggiBWsBJQA7JgAA
AACGCC4AEAAmAEYmAAAAAIYIDgVrAScAXiYAAAAAhgghABAAKABpJgAAAACGCPoEawEpAIEmAAAA
AIYIswQQACoAjCYAAAAAhggaBmsBKwCkJgAAAACGCCEBEAAsAK8mAAAAAIYIRwVrAS0AxyYAAAAA
hggtARAALgDSJgAAAACGCFoFawEvAOomAAAAAIYIyAAQADAA9SYAAAAAhgg2BWsBMQANJwAAAACG
CNALawEyAB0nAAAAAIYIygZrATMANScAAAAAhgADDAQBNAA9JwAAAACGAPcKBAE0AEUnAAAAAIYY
DQkGADQAZScAAAAAxgCvC3ABNACKJwAAAADGAacLXwE4AJ0nAAAAAMYB6wtfATkAnycAAAAAhhgN
CXoBOgCuJwAAAACGGA0JegE7AL0nAAAAAIMYDQkGADwAxScAAAAAkwjQCIABPADxJwAAAACTCKcB
nAA8APgnAAAAAJMIswGFATwAACgAAAAAlggSC4sBPQAHKAAAAACGGA0JBgA9AA8oAAAAAJEYEwmQ
AT0AAAABAAcMAAABAJcBAAABALsAAAABAGwEAAABAMkIAAACAE4KAAADAO4HAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAAB
AC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAAB
AC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAC0E
AAABAC0EAAABAC0EAAABAC0EAAABAC0EAAABAHUAAAACAGgBAAADAMkIAAAEAO4HAAABAMkIAAAB
AAcMAAABAEILAAABAEILAAABAC0ECQANCQEAEQANCQYAGQANCQoAKQANCRAAMQANCRAAOQANCRAA
QQANCRAASQANCRAAUQANCRAAWQANCRAAYQANCRAAaQANCQYAuQANCQYA2QANCRUA6QANCQYAqQAW
BAYAqQAhBAYAqQB9ACEA+QDICiYA8QBNBCwADAANCQYAeQANCQYA+QCYCkkA+QCUBE4AeQDBAFIA
sQB3BFgADAC3AFwAeQA6CGIADAAdB2cADAAmB20ADABMC04ADAAfDHQA+QCoBHoA+QCfBHoA+QCK
BH8A+QDSAIUA+QDaAJcA+QA2B1gAyQDPAZwAyQDPCqEAiQCcAaYAiQA0CqoAiQAaCrAAiQD4CaoA
iQAkCLUAAQELDAEAgQDIC7sAgQAxCE4AgQDiCsAAgQCPCtAAgQB3BNYA+QDICtsAkQANCeIAkQDJ
COwAkQBOCvAAmQCABPQAkQAOB/kAkQAmB/4AkQAVBwEAGQENCRAAkQADDAQBkQD3CgQBqQANCQYA
+QB8CggBqQBiChABsQANCQYAMQEPARYBMQEnDB8BwQANCSUB4QANCQYACAAEAD8BLgALAKsBLgAT
ALQBLgAbANMBLgAjANwBLgArAAUCLgAzAAUCLgA7AAUCLgBDANwBLgBLAAsCLgBTAAUCLgBbACIC
QwBjAGwC4wBrAGwCAQF7AGwC6QVzANMBCQZzANMBGwA1AIsAAwABAAcALwAIADEAAADjC5QBAADk
BpgBAABxCJQBAAB4BpgBAABCAZQBAAB2BZgBAABUAZQBAACPBZgBAABWCJQBAABWBpgBAAAwApQB
AADsBZgBAAAYApQBAADNBZgBAAAAApQBAACuBZgBAACmCpQBAACaBpgBAAC6CpQBAAC1BpgBAAB6
CJQBAACBBpgBAABBDJQBAAAHB5gBAAAgCJQBAAAuBpgBAABfApQBAAANBpgBAAA4DJQBAAD3BpgB
AABjAJQBAAAmBZgBAAAyAJQBAAASBZgBAAAlAJQBAAD+BJgBAAC3BJQBAAAeBpgBAAAlAZQBAABL
BZgBAAAxAZQBAABeBZgBAADMAJQBAAA6BZgBAADUC5gBAADOBpgBAADUCJwBAADcAaEBAAAWC6YB
AgAJAAMAAgAKAAUAAQALAAcAAQAMAAkAAQANAAsAAQAOAA0AAQAPAA8AAQAQABEAAQARABMAAQAS
ABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0AAQAXAB8AAQAYACEAAQAZACMAAQAaACUAAQAbACcA
AQAcACkAAQAdACsAAQAeAC0AAQAfAC8AAQAgADEAAQAhADMAAQAiADUAAQAjADcAAQAkADkAAQAl
ADsAAQAmAD0AAQAnAD8AAQAoAEEAAQApAEMAAQAqAEUAAQArAEcAAQAsAEkAAQAtAEsAAQAuAE0A
AQAvAE8AAQAwAFEAAQAxAFMAAQAyAFUAAQAzAFcAAQA0AFkAAQA1AFsAAQA2AF0AAgBAAF8AAgBB
AGEAAQBCAGEAAgBDAGMAQwAEgAAAAQAAAAAAAAAAAAAAAAA7AAAABAAAAAAAAAAAAAAALQGTAAAA
AAAQAAAAAAAAAAAAAAA2AWkLAAAAABAAAAAAAAAAAAAAADYBhgsAAAAABAAAAAAAAAAAAAAALQEv
BwAAAAAQAAAAAAAAAAAAAAA2AfgHAAAAAAAAAAABAAAAXgkAAAAAAElEVFNDb21wb25lbnRNZXRh
RGF0YTEwMABMaXN0YDEAc2V0X0FkZHJlc3MxAHNldF9BZGRyZXNzMgBTQ18wNmUyM2FmNWRiM2Q0
ZGM3YmQwZGIzNTEzYmI0MmI0MwBzZXRfQWRkcmVzczMAPE1vZHVsZT4ASW5wdXRJRABnZXRfQ29t
cG9uZW50TWV0YURhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAGZp
ZWxkAEFwcGVuZABzZXRfQm9hcmQAUmVwbGFjZQBJc051bGxPcldoaXRlU3BhY2UAZGVmYXVsdElu
c3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9EQkFOYW1lAHNl
dF9MaWNlbnNlZU5hbWUAc2V0X0VtcGxveWVyc05hbWUAc2V0X1NlbGZQcm9wcmlldG9yc05hbWUA
SW5wdXROYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAENsb25l
AFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlh
bnRDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAHNldF9PcmlnaW5hbExpY2Vuc2VEYXRl
AHNldF9TdGF0dXNFZmZlY3RpdmVEYXRlAHNldF9MaWNlbnNlRXhwaXJhdGlvbkRhdGUAc2V0X1N0
YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFVuZXNjYXBlQW5kVW5xdW90ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
RmlyZVdhcm5pbmcAUmVmb3JtYXREYXRlU3RyaW5nAGRhdGVTdHJpbmcAVG9TdHJpbmcAR2V0U3Ry
aW5nAFN1YnN0cmluZwBnZXRfTGVuZ3RoAEVuZHNXaXRoAFN0YXJ0c1dpdGgAc2V0X1JhbmsAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDXzA2ZTIzYWY1ZGIzZDRkYzdiZDBkYjM1MTNiYjQyYjQzLmRs
bABzZXRfQWRkcmVzczFfSXNOdWxsAHNldF9BZGRyZXNzMl9Jc051bGwAc2V0X0FkZHJlc3MzX0lz
TnVsbABzZXRfQm9hcmRfSXNOdWxsAHNldF9EQkFOYW1lX0lzTnVsbABzZXRfTGljZW5zZWVOYW1l
X0lzTnVsbABzZXRfRW1wbG95ZXJzTmFtZV9Jc051bGwAc2V0X1NlbGZQcm9wcmlldG9yc05hbWVf
SXNOdWxsAHNldF9PcmlnaW5hbExpY2Vuc2VEYXRlX0lzTnVsbABzZXRfU3RhdHVzRWZmZWN0aXZl
RGF0ZV9Jc051bGwAc2V0X0xpY2Vuc2VFeHBpcmF0aW9uRGF0ZV9Jc051bGwAc2V0X1N0YXRlX0lz
TnVsbABzZXRfUmFua19Jc051bGwAc2V0X1ppcF9Jc051bGwAc2V0X0xpY2Vuc2VOdW1iZXJfSXNO
dWxsAHNldF9BbHRlcm5hdGVMaWNlbnNlTnVtYmVyX0lzTnVsbABzZXRfRW1wbG95ZXJzTGljZW5z
ZU51bWJlcl9Jc051bGwAc2V0X1NlY29uZGFyeVN0YXR1c19Jc051bGwAc2V0X1ByaW1hcnlTdGF0
dXNfSXNOdWxsAHNldF9Jc1ZhbGlkUm93X0lzTnVsbABnZXRfRmlsZVJvd19Jc051bGwAc2V0X0Np
dHlfSXNOdWxsAHNldF9Db3VudHlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lz
dGVtAFRyaW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBEYXRlVGltZUZvcm1hdElu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAAc2V0X1ppcABnZXRfQ2FsZW5kYXIAZ2V0X1llYXIAQ2xlYXIAc2V0X0xpY2Vuc2VOdW1i
ZXIAc2V0X0FsdGVybmF0ZUxpY2Vuc2VOdW1iZXIAc2V0X0VtcGxveWVyc0xpY2Vuc2VOdW1iZXIA
SUZvcm1hdFByb3ZpZGVyAFN0cmluZ0J1aWxkZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVy
AEZpbGVSb3dCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzA2ZTIzYWY1ZGIz
ZDRkYzdiZDBkYjM1MTNiYjQyYjQzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ18wNmUyM2FmNWRiM2Q0ZGM3YmQwZGIzNTEzYmI0MmI0My5Qcm9wZXJ0aWVz
AFZhcmlhYmxlcwBEYXRlVGltZVN0eWxlcwBzZXRfQWJicmV2aWF0ZWRNb250aEdlbml0aXZlTmFt
ZXMAZ2V0X0FiYnJldmlhdGVkTW9udGhOYW1lcwBzZXRfQWJicmV2aWF0ZWRNb250aE5hbWVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVj
dGlvbnMAQWRkWWVhcnMAZ2V0X0NoYXJzAHNldF9TZWNvbmRhcnlTdGF0dXMAc2V0X1ByaW1hcnlT
dGF0dXMAQ29uY2F0AGdldF9EYXRlVGltZUZvcm1hdABUcnlQYXJzZUV4YWN0AE9iamVjdABFbmRP
ZlJvd3NldABDdXN0b21Dc3ZTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0NvdW50AEV4cGVjdGVkRmllbGRDb3VudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AEZpbGVSb3dfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AGdldF9Ob3cAc2V0X0lzVmFsaWRSb3cA
Z2V0X0ZpbGVSb3cARmlsZVJvd19Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBzZXRfVHdvRGlnaXRZ
ZWFyTWF4AFRvQXJyYXkAZ2V0X0Fzc2VtYmx5AHNldF9DaXR5AHNldF9Db3VudHkAAC9GAGkAbABl
AFIAbwB3AF8AUAByAG8AYwBlAHMAcwBJAG4AcAB1AHQAUgBvAHcAAH1TAGsAaQBwAHAAaQBuAGcA
IABsAGkAbgBlACAAZAB1AGUAIAB0AG8AIABwAGEAcgBzAGkAbgBnACAAZQByAHIAbwByACAAbwBy
ACAAdQBuAGUAeABwAGUAYwB0AGUAZAAgAGYAaQBlAGwAZAAgAGMAbwB1AG4AdAA6ACAAAAEAAyIA
AAUiACIAABNkAGQALQBNAE0ATQAtAHkAeQABF2QAZAAtAE0ATQBNAC0AeQB5AHkAeQABB0oAQQBO
AAAHRgBFAEIAAAdNAEEAUgAAB0EAUABSAAAHTQBBAFkAAAdKAFUATgAAB0oAVQBMAAAHQQBVAEcA
AAdTAEUAUAAAB08AQwBUAAAHTgBPAFYAAAdEAEUAQwAAFXkAeQB5AHkALQBNAE0ALQBkAGQAASVS
AGUAZgBvAHIAbQBhAHQARABhAHQAZQBTAHQAcgBpAG4AZwAAL0YAYQBpAGwAZQBkACAAdABvACAA
cABhAHIAcwBlACAAZABhAHQAZQA6ACAAJwABAycAAYCbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAAPRgBpAGwAZQBSAG8AdwAAcVMAQwBfADAANgBlADIAMwBhAGYANQBk
AGIAMwBkADQAZABjADcAYgBkADAAZABiADMANQAxADMAYgBiADQAMgBiADQAMwAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAB+YqNwwDkARpa3N+8nvT2SAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFpBQcCDh0OBCAAEnkFAAIODg4IIAUBCA4ODggNBwYVEjkBDgIS
PQgDCAUVEjkBDgQgAQMIAyAACAUgARI9AwMgAA4FIAEBEwAEIAASPQUgARMACAYgAgEIEwAFIAAd
EwAEIAECDgUgAg4ICAUgAg4ODgsHBRFBHQ4SRQgRQQQAAQIOBAAAEmUEIAASRQMgABwFIAEBHQ4E
IAAdDgUgABKAgQQAABFBDwAFAg4dDhKAhRGAiRARQQUgARFBCAQgAQ4OBgADDg4ODgkgAwESTR0I
ElEDBhJNAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACByACAg4RgJUFIAEdCAgIAAESgJkRgJ0FIAAS
gKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQVAAAAAgYIAwYSFAMGEhgDBhJVAwYSYQMGEmUD
BhIgBSABARIMBSABHQ4OBCABAQIJIAQBCA4STRJRBSABARJVBAAAEmEFAAEBEmUEAAASIAMAAAED
KAAOAygAAgQIABJhBAgAEmUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfMDZlMjNhZjVkYjNkNGRjN2JkMGRiMzUxM2JiNDJiNDMAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAAoRwAAAAAAAAAAAABCRwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANEcAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADAA
NgBlADIAMwBhAGYANQBkAGIAMwBkADQAZABjADcAYgBkADAAZABiADMANQAxADMAYgBiADQAMgBi
ADQAMwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA2AGUAMgAzAGEAZgA1AGQAYgAz
AGQANABkAGMANwBiAGQAMABkAGIAMwA1ADEAMwBiAGIANAAyAGIANAAzAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADYAZQAyADMAYQBm
ADUAZABiADMAZAA0AGQAYwA3AGIAZAAwAGQAYgAzADUAMQAzAGIAYgA0ADIAYgA0ADMALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA2AGUAMgAzAGEAZgA1
AGQAYgAzAGQANABkAGMANwBiAGQAMABkAGIAMwA1ADEAMwBiAGIANAAyAGIANAAzAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABUNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_06e23af5db3d4dc7bd0db3513bb42b43</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">29</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Inputs[FileRow]"
                          hasSideEffects="true"
                          name="FileRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Inputs[FileRow].Columns[FileRow]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="FileRow"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output].Columns[FileRow]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns]"
                          name="ParsedColumns"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Inputs[FileRow]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              name="EmployersLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output]"
                              name="EmployersName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1012:invalid"
                              name="SelfProprietorsName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              name="AlternateLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseNumber]"
                              name="LicenseExpirationDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                              name="StatusEffectiveDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults"
                              name="OriginalLicenseDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1013:invalid"
                              name="SecondaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1014:invalid"
                              name="PrimaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1015:invalid"
                              name="LicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[County]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1016:invalid"
                              name="County" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Zip]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1017:invalid"
                              name="Zip" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[State]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1018:invalid"
                              name="State" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[City]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\1019:invalid"
                              name="City" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address3]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output]"
                              name="Address3" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address2]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address1]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[cobalt_contactid]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Rank]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="Rank" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[DBAName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidname]"
                              name="DBAName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]"
                              mappedColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="LicenseeName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Board]"
                              name="Board" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ErrorOutput]"
                          name="ErrorOutput"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Inputs[FileRow]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ErrorOutput].Columns[IsValidRow]"
                              dataType="bool"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ErrorOutput].Columns[IsValidRow]"
                              name="IsValidRow" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - Alt Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              name="LicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - RAMCO Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[cobalt_contactidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="cobalt_contactidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[cobalt_contactidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="cobalt_contactidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_officeidname]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_officeidname"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_officeidyominame]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_officeidyominame"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_realestatelicense]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicense"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input].Columns[ramco_realestatelicensename]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ramco_realestatelicensename"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactidname]"
                              name="cobalt_contactidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_contactidyominame]"
                              name="cobalt_contactidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeid]"
                              name="ramco_officeid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeidname]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeidname]"
                              name="ramco_officeidname">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeidyominame]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_officeidyominame]"
                              name="ramco_officeidyominame">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicense]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicense]"
                              name="ramco_realestatelicense"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicensename]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output].Columns[ramco_realestatelicensename]"
                              name="ramco_realestatelicensename">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort - REC Lic #"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Board]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[DBAName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address1]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address2]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[City]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[State]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Zip]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[County]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Rank]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address3]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statecode]"
                              name="Statecode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[recordName]"
                              name="recordName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Board]"
                              name="Board">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Board]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersName]"
                              name="EmployersName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[DBAName]"
                              name="DBAName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[DBAName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address1]"
                              name="Address1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address1]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address2]"
                              name="Address2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[City]"
                              name="City">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[City]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[State]"
                              name="State">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[State]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Zip]"
                              name="Zip">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Zip]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[County]"
                              name="County">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[County]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[PrimaryStatus]"
                              name="PrimaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[PrimaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Rank]"
                              name="Rank">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Rank]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[flState]"
                              name="flState">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseeName]"
                              name="LicenseeName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Address3]"
                              name="Address3">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[Address3]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[LicenseNumber]"
                              name="LicenseNumber"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SecondaryStatus]"
                              name="SecondaryStatus">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output].Columns[Statuscode]"
                              name="Statuscode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Trim &amp; Set Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(LicenseNumber)</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[AlternateLicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(AlternateLicenseNumber)</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[TRIM](#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">TRIM(LicenseNumber)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statecode]"
                              name="Statecode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]} == "Active" ? 0 : 1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 0 : 1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">379120000</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">379120000</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[recordName]"
                              name="recordName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseeName]} + " - " + #{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[LicenseNumber]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">LicenseeName + " - " + LicenseNumber</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]"
                              dataType="guid"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[flState]"
                              name="flState"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_GUID)("{" + "D431E2D7-EF20-E111-B470-00155D000140" + "}")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_GUID)("{" + "D431E2D7-EF20-E111-B470-00155D000140" + "}")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output].Columns[Statuscode]"
                              name="Statuscode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns].Columns[SecondaryStatus]} == "Active" ? 1 : 2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">SecondaryStatus == "Active" ? 1 : 2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statecode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[recordName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Board]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[DBAName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address1]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address2]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[State]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Zip]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[County]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Rank]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Rank"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Rank]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Rank]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[flState]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseeName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address3]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statuscode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_contactid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_contactid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[cobalt_membershipid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output].Columns[ramco_officeid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[ramco_officeid]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[accountLicenseNumber]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="accountLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[accountLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[IndividualOrEntity]"
                              cachedDataType="i4"
                              cachedName="IndividualOrEntity"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[IndividualOrEntity]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[recordName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[recordName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[City]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[State]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[State]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Zip]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Zip]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[County]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[County]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Board]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="Board"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Board]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Board]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[DBAName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[DBAName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address1]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address1]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address2]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address2]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[PrimaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="PrimaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[PrimaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[OriginalLicenseDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="OriginalLicenseDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[OriginalLicenseDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[LicenseExpirationDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="LicenseExpirationDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseExpirationDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[AlternateLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[flState]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[flState]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statecode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statecode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[EmployersLicenseNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Address3]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address3"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Address3]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address3]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[LicenseeName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseeName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[SecondaryStatus]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="SecondaryStatus"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SecondaryStatus]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[StatusEffectiveDate]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="StatusEffectiveDate"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[StatusEffectiveDate]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[SelfProprietorsName]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[Statuscode]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statuscode]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_contactid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_contactid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[cobalt_membershipid]"
                              cachedDataType="guid"
                              cachedName="cobalt_membershipid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[cobalt_membershipid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_membershipid]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2].Columns[ramco_officeid]"
                              cachedDataType="guid"
                              cachedName="ramco_officeid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output].Columns[ramco_officeid]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[ramco_officeid]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[accountLicenseNumber]"
                              name="accountLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statecode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statecode]"
                              name="Statecode" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[IndividualOrEntity]"
                              name="IndividualOrEntity" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[recordName]"
                              dataType="wstr"
                              length="123"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[recordName]"
                              name="recordName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Board]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Board]"
                              name="Board" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersName]"
                              name="EmployersName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[DBAName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[DBAName]"
                              name="DBAName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="150"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address1]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address2]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[City]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[City]"
                              name="City" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[State]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[State]"
                              name="State" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Zip]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Zip]"
                              name="Zip" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[County]"
                              name="County" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]"
                              name="EmployersLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[PrimaryStatus]"
                              name="PrimaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Rank]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Rank]"
                              name="Rank" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[OriginalLicenseDate]"
                              name="OriginalLicenseDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseExpirationDate]"
                              name="LicenseExpirationDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]"
                              name="AlternateLicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[flState]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[flState]"
                              name="flState" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseeName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseeName]"
                              name="LicenseeName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address3]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address3]"
                              name="Address3" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]"
                              codePage="1252"
                              dataType="str"
                              length="20"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]"
                              name="LicenseNumber" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SecondaryStatus]"
                              name="SecondaryStatus" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[StatusEffectiveDate]"
                              name="StatusEffectiveDate" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]"
                              name="SelfProprietorsName" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statuscode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statuscode]"
                              name="Statuscode" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_contactid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_contactid]"
                              name="cobalt_contactid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_membershipid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[ramco_officeid]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[ramco_officeid]"
                              name="ramco_officeid" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Extracts data from Dynamics CRM services.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Extracts data from Dynamics CRM services."
                      name="Upsert - Individuals - Get - Memberships">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmSourceDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies query batch size."
                          name="BatchSize">500</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to access the service."
                          name="InputType"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmSource+InputTypes">1</property>
                        <property
                          dataType="System.String"
                          description="Dynamics CRM entity."
                          expressionType="Notify"
                          name="Entity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor"></property>
                        <property
                          dataType="System.String"
                          description="FetchXML statement."
                          expressionType="Notify"
                          name="FetchXML"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.CrmStatementEditor">&lt;fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"&gt;
  &lt;entity name="cobalt_membership"&gt;
    &lt;attribute name="ramco_realestatelicense" /&gt;
    &lt;attribute name="cobalt_membershipid" /&gt;
    &lt;attribute name="ramco_officeid" /&gt;
    &lt;attribute name="cobalt_contactid" /&gt;
    &lt;order attribute="ramco_realestatelicense" descending="false" /&gt;
    &lt;filter type="and"&gt;
      &lt;condition attribute="statecode" operator="eq" value="0" /&gt;
      &lt;condition attribute="ramco_realestatelicense" operator="not-null" /&gt;
      &lt;condition attribute="ramco_associationid" operator="eq" value="@[User::orgGUID]" /&gt;
    &lt;/filter&gt;
    &lt;link-entity name="cobalt_membertype" from="cobalt_membertypeid" to="cobalt_membertypeid" alias="af"&gt;
      &lt;filter type="and"&gt;
        &lt;condition attribute="ramco_nrdsmembertype" operator="in"&gt;
          &lt;value&gt;379120000&lt;/value&gt;
          &lt;value&gt;379120005&lt;/value&gt;
        &lt;/condition&gt;
      &lt;/filter&gt;
    &lt;/link-entity&gt;
  &lt;/entity&gt;
&lt;/fetch&gt;</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection Manager"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output]"
                          name="Dynamics CRM Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactid]"
                              name="cobalt_contactid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidname]"
                              name="cobalt_contactidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_contactidyominame]"
                              name="cobalt_contactidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_membershipid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[cobalt_membershipid]"
                              name="cobalt_membershipid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]"
                              dataType="guid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeid]"
                              name="ramco_officeid" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidname]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidname]"
                              name="ramco_officeidname" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidyominame]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_officeidyominame]"
                              name="ramco_officeidyominame" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicense]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicense]"
                              name="ramco_realestatelicense" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicensename]"
                              length="100"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].Columns[ramco_realestatelicensename]"
                              name="ramco_realestatelicensename" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactid]"
                              dataType="guid"
                              name="cobalt_contactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidname]"
                              dataType="wstr"
                              length="100"
                              name="cobalt_contactidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_contactidyominame]"
                              dataType="wstr"
                              length="100"
                              name="cobalt_contactidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[cobalt_membershipid]"
                              dataType="guid"
                              name="cobalt_membershipid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeid]"
                              dataType="guid"
                              name="ramco_officeid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officeidname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_officeidyominame]"
                              dataType="wstr"
                              length="100"
                              name="ramco_officeidyominame" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output].ExternalColumns[ramco_realestatelicensename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_realestatelicensename" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Populates Dynamics CRM destination entity.; COZYROC LLC; SSIS+; © 2006-2024 COZYROC LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                      description="Populates Dynamics CRM destination entity."
                      name="Upsert - Individuals - Write to CRM"
                      usesDispositions="true">
                      <properties>
                        <property
                          dataType="System.Null"
                          name="ComponentObject"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          name="DtsComponentDesigner"
                          typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.CrmDestinationDesigner, CozyRoc.SSISPlus.UI.2022, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=16cf490bb80c34ea</property>
                        <property
                          dataType="System.String"
                          description="Destination entity to load."
                          expressionType="Notify"
                          name="DestinationEntity"
                          typeConverter="CozyRoc.SqlServer.SSIS.TableEditor">ramco_statelicense</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies destination action type."
                          name="Action"
                          typeConverter="CozyRoc.SqlServer.SSIS.CrmDestination+ActionTypes">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if missing object identifiers are ignored."
                          name="IgnoreMissingIdentifier">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if duplicate detection rules are active during create or update."
                          name="DetectDuplicate">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of rows to be sent as a batch to the service."
                          name="BatchSize">200</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how to handle multiple match records."
                          name="MultipleMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMulti">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies if unchanged attributes are ignored."
                          name="IgnoreUnchanged">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies records matching criteria for Upsert action."
                          name="UpsertMatch"
                          typeConverter="CozyRoc.Dynamics.Crm.UpsertMatch">1</property>
                        <property
                          dataType="System.String"
                          description="Select alternate keys to match records for Upsert action."
                          name="UpsertAlternateKeys"
                          UITypeEditor="CozyRoc.SqlServer.SSIS.ListEditor">ramco_licensenumber</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies to ignore columns containing NULL value."
                          name="IgnoreNullValue">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">CozyRoc.CrmDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Connections[DYNAMICS-CRM]"
                          connectionManagerID="Package.ConnectionManagers[RAMCO]"
                          connectionManagerRefId="Package.ConnectionManagers[RAMCO]"
                          description="Dynamics CRM Connection"
                          name="DYNAMICS-CRM" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Dynamics CRM Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Statecode]"
                              cachedDataType="i4"
                              cachedName="Statecode"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statecode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Statuscode]"
                              cachedDataType="i4"
                              cachedName="Statuscode"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Statuscode]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[flState]"
                              cachedDataType="guid"
                              cachedName="flState"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[flState]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[recordName]"
                              cachedDataType="wstr"
                              cachedLength="123"
                              cachedName="recordName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_name]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[recordName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[LicenseeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="LicenseeName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nameonlicense]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseeName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[LicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="LicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[LicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_StatusDate]"
                              cachedDataType="dbDate"
                              cachedName="_StatusDate"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_statuseffectivedate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_StatusDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[SelfProprietorsName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="SelfProprietorsName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_selfproprietorsname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[SelfProprietorsName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="County"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_countyname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[County]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[AlternateLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="AlternateLicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_alternatelicensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[AlternateLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="150"
                              cachedName="Address1"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet1]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Address2"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet2]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[Zip]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="20"
                              cachedName="Zip"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresszip]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[Zip]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[State]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="State"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[State]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[City]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="City"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresscity]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[City]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_ExpDate]"
                              cachedDataType="dbDate"
                              cachedName="_ExpDate"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licenseexpirationdate]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_ExpDate]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[DBAName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DBAName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerdbaname]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[DBAName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[EmployersLicenseNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="EmployersLicenseNumber"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerlicensenumber]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersLicenseNumber]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_Entity]"
                              cachedDataType="i4"
                              cachedName="_Entity"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_individualorentity]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_Entity]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[EmployersName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="EmployersName"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employername]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[EmployersName]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_PrimaryStatus]"
                              cachedDataType="i4"
                              cachedName="_PrimaryStatus"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_primarystatus]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_PrimaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[_SecondaryStatus]"
                              cachedDataType="i4"
                              cachedName="_SecondaryStatus"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_secondarystatus]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output].Columns[_SecondaryStatus]" />
                            <inputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].Columns[cobalt_contactid]"
                              cachedDataType="guid"
                              cachedName="cobalt_contactid"
                              externalMetadataColumnId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_contactid]"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1].Columns[cobalt_contactid]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[importsequencenumber]"
                              dataType="i4"
                              name="importsequencenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[overriddencreatedon]"
                              dataType="dbDate"
                              name="overriddencreatedon" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ownerid]"
                              dataType="guid"
                              name="ownerid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[owneridtype]"
                              dataType="wstr"
                              length="250"
                              name="owneridtype" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_contactid]"
                              dataType="guid"
                              name="ramco_contactid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerdbaname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerdbaname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerlicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerlicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employername]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employername" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_employerphone]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_employerphone" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_firstname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_firstname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_individualorentity]"
                              dataType="i4"
                              name="ramco_core_individualorentity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_lastname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_lastname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licenseexpirationdate]"
                              dataType="dbDate"
                              name="ramco_core_licenseexpirationdate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_licensereneweddate]"
                              dataType="dbDate"
                              name="ramco_core_licensereneweddate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresscity]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddresscity" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstate]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet1]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstreet1" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddressstreet2]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddressstreet2" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_mailingaddresszip]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_mailingaddresszip" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_middlename]"
                              dataType="wstr"
                              length="100"
                              name="ramco_core_middlename" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_core_office]"
                              dataType="guid"
                              name="ramco_core_office" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_alternatelicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_alternatelicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_countyname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_countyname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_dbaname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_dbaname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_employerslicensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_employerslicensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_employersname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_employersname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_primarystatus]"
                              dataType="i4"
                              name="ramco_fl_primarystatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_rank]"
                              dataType="i4"
                              name="ramco_fl_rank" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_secondarystatus]"
                              dataType="i4"
                              name="ramco_fl_secondarystatus" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_selfproprietorsname]"
                              dataType="wstr"
                              length="100"
                              name="ramco_fl_selfproprietorsname" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_fl_statuseffectivedate]"
                              dataType="dbDate"
                              name="ramco_fl_statuseffectivedate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licenseissuedate]"
                              dataType="dbDate"
                              name="ramco_licenseissuedate" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_licensenumber]"
                              dataType="wstr"
                              length="100"
                              name="ramco_licensenumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_name]"
                              dataType="wstr"
                              length="100"
                              name="ramco_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_nameonlicense]"
                              dataType="wstr"
                              length="100"
                              name="ramco_nameonlicense" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_stateid]"
                              dataType="guid"
                              name="ramco_stateid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[ramco_statelicenseid]"
                              dataType="guid"
                              name="ramco_statelicenseid" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statecode]"
                              dataType="i4"
                              name="statecode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[statuscode]"
                              dataType="i4"
                              name="statuscode" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[timezoneruleversionnumber]"
                              dataType="i4"
                              name="timezoneruleversionnumber" />
                            <externalMetadataColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input].ExternalColumns[utcconversiontimezonecode]"
                              dataType="i4"
                              name="utcconversiontimezonecode" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Dynamics CRM Destination Error Output"
                          synchronousInputId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              dataType="guid"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Outputs[Dynamics CRM Destination Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Conditional Split Default Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 1]"
                      name="Conditional Split Default Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Inputs[Sort Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM.Inputs[Dynamics CRM Destination Input]"
                      name="Derived Column Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Dynamics CRM Source Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column.Inputs[Derived Column Input]"
                      name="Dynamics CRM Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships.Outputs[Dynamics CRM Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Flat File Source Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Inputs[FileRow]"
                      name="Flat File Source Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Merge Join Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Merge Join Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Inputs[Union All Input 2]"
                      name="Merge Join Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Multicast Output 1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Right Input]"
                      name="Multicast Output 1"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Multicast Output 3]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Right Input]"
                      name="Multicast Output 3"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Outputs[Multicast Output 3]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[No Match]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Inputs[Sort Input]"
                      name="No Match"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split.Outputs[No Match]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[ParsedColumns]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults.Inputs[Derived Column Input]"
                      name="ParsedColumns"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component.Outputs[ParsedColumns]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast.Inputs[Multicast Input 1]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output2]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #.Outputs[Sort Output]" />
                    <path
                      refId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Union All Output 1]"
                      endId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types.Inputs[Derived Column Input]"
                      name="Union All Output 1"
                      startId="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All.Outputs[Union All Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{3F70AFAB-EA0F-4812-AD43-F1759578FD70}"
              DTS:From="Package\Foreach Loop Container\Sequence Container\Upsert - Entities"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{D307F16D-D46D-410B-BDA8-C876A69F6941}"
              DTS:From="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach Loop Container\Sequence Container\Associate Licenses" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{8893F21F-F0A6-4757-9BA6-C60F85A433EE}"
              DTS:From="Package\Foreach Loop Container\Sequence Container\Log orgName in Console"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Foreach Loop Container\Sequence Container\Upsert - Entities" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E61C58F2-2165-4FB5-A00E-9B03FA47E623}"
          DTS:ObjectName="{E61C58F2-2165-4FB5-A00E-9B03FA47E623}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::orgPrefix" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{32AAA2E6-2640-4FC3-A83C-28640339A23B}"
          DTS:ObjectName="{32AAA2E6-2640-4FC3-A83C-28640339A23B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::orgGUID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Retrieve DBPR Files"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{CB58DBB7-397B-4D02-AC2A-69D1DE968219}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Retrieve DBPR Files"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_8b660b8b4d1b4b988325d0b7ebfeb351"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::FL_filePath_Entity,$Project::FL_filePath_Licensee,$Project::FL_sourceURL_Entity,$Project::FL_sourceURL_Licensee">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6695470d6e2742e08615e380f75d68bb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6695470d6e2742e08615e380f75d68bb")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_8b660b8b4d1b4b988325d0b7ebfeb351.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0E703584-15A6-4A0E-AB5F-8BAEEA2801A4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6695470d6e2742e08615e380f75d68bb</RootNamespace>
    <AssemblyName>ST_8b660b8b4d1b4b988325d0b7ebfeb351</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
using System.Text.RegularExpressions;
using System.Text;

#endregion

namespace ST_6695470d6e2742e08615e380f75d68bb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string entityURL = (string)Dts.Variables["$Project::FL_sourceURL_Entity"].Value;
            string entityPath = (string)Dts.Variables["$Project::FL_filePath_Entity"].Value;
            string licenseeURL = (string)Dts.Variables["$Project::FL_sourceURL_Licensee"].Value;
            string licenseePath = (string)Dts.Variables["$Project::FL_filePath_Licensee"].Value;

            using (WebClient client = new WebClient())
            {
                client.DownloadFile(entityURL, entityPath);
                client.DownloadFile(licenseeURL, licenseePath);
            }

            //// Cleanse the downloaded CSV files
            //CleanseCsvFile(entityPath);
            //CleanseCsvFile(licenseePath);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        /// <summary>
        /// Cleanses the input CSV file by replacing text qualifiers and escaping any occurrences of the new text qualifier in the data.
        /// </summary>
        /// <param name="filePath">Path to the downloaded file.</param>
        private void CleanseCsvFile(string filePath)
        {
            string tempFile = Path.GetTempFileName();
            char oldQualifier = '"';
            char newQualifier = '|'; // Choose a character unlikely to be in your data

            using (StreamReader reader = new StreamReader(filePath))
            using (StreamWriter writer = new StreamWriter(tempFile))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    string fixedLine = ReplaceTextQualifier(line, oldQualifier, newQualifier);
                    writer.WriteLine(fixedLine);
                }
            }

            // Replace the original file with the cleansed file
            File.Copy(tempFile, filePath, true);
            File.Delete(tempFile);
        }

        /// <summary>
        /// Replaces the text qualifiers in a CSV line from oldQualifier to newQualifier, and escapes any occurrences of newQualifier in the data.
        /// </summary>
        /// <param name="line">The CSV line to process.</param>
        /// <param name="oldQualifier">The original text qualifier.</param>
        /// <param name="newQualifier">The new text qualifier.</param>
        /// <returns>The modified CSV line.</returns>
        private string ReplaceTextQualifier(string line, char oldQualifier, char newQualifier)
        {
            StringBuilder sb = new StringBuilder();
            bool inQuotes = false;

            for (int i = 0; i < line.Length; i++)
            {
                char c = line[i];

                if (c == oldQualifier)
                {
                    if (inQuotes)
                    {
                        if (i + 1 < line.Length && line[i + 1] == oldQualifier)
                        {
                            // Escaped oldQualifier inside quoted field
                            sb.Append(oldQualifier); // Keep it as is
                            i++; // Skip the next character
                        }
                        else
                        {
                            // Closing qualifier
                            inQuotes = false;
                            sb.Append(newQualifier); // Replace with new qualifier
                        }
                    }
                    else
                    {
                        // Opening qualifier
                        inQuotes = true;
                        sb.Append(newQualifier); // Replace with new qualifier
                    }
                }
                else if (c == newQualifier)
                {
                    // Escape newQualifier in data by doubling it
                    sb.Append(newQualifier).Append(newQualifier);
                }
                else
                {
                    sb.Append(c);
                }
            }

            return sb.ToString();
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_8b660b8b4d1b4b988325d0b7ebfeb351</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_8b660b8b4d1b4b988325d0b7ebfeb351</msb:DisplayName>
    <msb:ProjectId>{87FFAF9D-D84C-4734-91CB-93D6E63BA874}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_8b660b8b4d1b4b988325d0b7ebfeb351.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6695470d6e2742e08615e380f75d68bb.Properties.Settings.get_Default():ST_6695470d6e2742e08615e380f75d68bb.Properties.Sett" +
    "ings")]

namespace ST_6695470d6e2742e08615e380f75d68bb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6695470d6e2742e08615e380f75d68bb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6695470d6e2742e08615e380f75d68bb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6695470d6e2742e08615e380f75d68bb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6695470d6e2742e08615e380f75d68bb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6695470d6e2742e08615e380f75d68bb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_8b660b8b4d1b4b988325d0b7ebfeb351.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMQoSGcAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAZjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQyAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
MgAAAAAAAEgAAAACAAUAqCIAALQOAAABAAAAAAAAAFwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC0AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB8AAAEKAigQAAAKbxEAAApyPQAAcG8SAAAKbxMAAAp0HwAAAQsCKBAAAApvEQAACnJ3AABw
bxIAAApvEwAACnQfAAABDAIoEAAACm8RAAAKcrcAAHBvEgAACm8TAAAKdB8AAAENcxQAAAoTBBEE
BgdvFQAAChEECAlvFQAACt4MEQQsBxEEbxYAAArcAigQAAAKFm8XAAAKKgEQAAACAIcAFJsADAAA
AAAbMAQAZAAAAAIAABEoGAAACgofIgsffAwDcxkAAAoNBnMaAAAKEwQrFQIRBQcIKAMAAAYTBhEE
EQZvGwAACglvHAAACiUTBS3g3hYRBCwHEQRvFgAACtwJLAYJbxYAAArcBgMXKB0AAAoGKB4AAAoq
ARwAAAIAGwAkPwAMAAAAAAIAEwA4SwAKAAAAABMwAwCIAAAAAwAAEXMfAAAKChYLFgwrbAMIbyAA
AAoNCQQzQAcsMQgXWANvIQAACi8aAwgXWG8gAAAKBDMOBgRvIgAACiYIF1gMKzQWCwYFbyIAAAom
KygXCwYFbyIAAAomKxwJBTMQBgVvIgAACgVvIgAACiYrCAYJbyIAAAomCBdYDAgDbyEAAAoyiwZv
IwAACioeAigkAAAKKh4CKCUAAAoqrn4BAAAELR5y9QAAcNADAAACKCYAAApvJwAACnMoAAAKgAEA
AAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoKQAACioucwoAAAaAAwAABCoAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQEAAAjfgAA8AQAAKAGAAAjU3RyaW5ncwAA
AACQCwAAaAEAACNVUwD4DAAAEAAAACNHVUlEAAAACA0AAKwBAAAjQmxvYgAAAAAAAAACAAABVx2i
AQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAALAAAABQAAACkAAAACAAAAEAAAAAMAAAACAAAA
AwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAdBAEAAAAAAAYAuQJaBQYASANaBQYABQJHBQ8AzgUA
AAYAMgKbBAYAnAKbBAYAfQKbBAYALwObBAYA2QKbBAYA8gKbBAYASQKbBAYAZAJ2AwoADQPMAwoA
dQHMAw4AeAZSBgYAuQQuAAYAIgUuAAYA0QSCBgYAVQROBAYA6AFHBQYASwZOBAYA4wR6BQYArQSG
BA4AsQEHBA4AGQIHBA4AkQFxBAYAzQFaBQoA9QPMAxIAEAYIARIAowAIAQYAkgNOBAYArABOBAYA
nQMuAAYALwUuAAYAxgQuAAYA8wAuAAYAQAFOBAYAuABOBAYAkgabBAAAAAAlAAAAAAABAAEAAQAQ
AGYEXwA5AAEAAQAAABAAgQXdBVUAAQAFAAABEAAaBt0FaQADAAkAAwEAAD0GAABNAAQADAARAFoE
qAARAGUBrAARAJMAsAAGBlcAtABWgC0GtwBWgEUBtwBQIAAAAACGAGwEBgABACAhAAAAAIEA6QAQ
AAEArCEAAAAAgQAABbsAAgBAIgAAAACGGDoFBgAFAEgiAAAAAIMYOgUGAAUAUCIAAAAAkwjfBMIA
BQB8IgAAAACTCE0BxwAFAIMiAAAAAJMIWQHMAAUAiyIAAAAAlghdBtIABgCSIgAAAACGGDoFBgAG
AJoiAAAAAJEYQAXXAAYAAAABAJkDAAABADsBAAACAPMEAAADABUFAAABAHADCQA6BQEAEQA6BQYA
GQA6BQoAKQA6BRAAMQA6BRAAOQA6BRAAQQA6BRAASQA6BRAAUQA6BRAAWQA6BRAAYQA6BRAAaQA6
BQYAoQA6BQYAyQA6BRUA2QA6BQYAcQA1BiQA4QAMBikA6QBFBC4A8QBmAzQAeQA6BQYAeQDcADgA
AQGpAQYA4QBpBgEACQH4AEoAgQA6BRAAiQA6BRAAEQExARAAGQEoAU4AIQGbBlIAIQHGAVkAkQA6
BQYA+QAjBmYA+QCiA2sAkQCMAG8AqQCQA04AcQA6BQYAqQA6BQYAKQHKAHUAKQGOBn4AsQA6BYQA
0QA6BQYACAAUAJ4ACAAYAKMAKQBzABIBLgALAOoALgATAPMALgAbABIBLgAjABsBLgArAEQBLgAz
AEQBLgA7AEQBLgBDABsBLgBLAEoBLgBTAEQBLgBbAGEBQwBjAKMASQBzABIBYQB7AKMAYwBrAKMA
GwA+AF4AAwABAAQAAwAAAOME2wAAAG0B4AAAAGEG5QACAAYAAwACAAcABQABAAgABQACAAkABwAE
gAAAAQAAAIoj8hAAAAAAAAABAAAABAAAAAAAAAAAAAAAjACDAAAAAAAQAAAAAAAAAAAAAACVAK0D
AAAAAAQAAAAAAAAAAAAAAIwATgQAAAAAEAAAAAAAAAAAAAAAlQA4AAAAAAAAAAAAAQAAAIsFAAAF
AAIAAAAAU1RfOGI2NjBiOGI0ZDFiNGI5ODgzMjVkMGI3ZWJmZWIzNTEAPE1vZHVsZT4AU3lzdGVt
LklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzY2OTU0NzBkNmUy
NzQyZTA4NjE1ZTM4MGY3NWQ2OGJiAG1zY29ybGliAEFwcGVuZABkZWZhdWx0SW5zdGFuY2UAVmFy
aWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARG93
bmxvYWRGaWxlAENsZWFuc2VDc3ZGaWxlAEdldFRlbXBGaWxlTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFJlYWRMaW5lAFdyaXRlTGluZQBsaW5lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUb1N0cmluZwBmaWxlUGF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF84YjY2MGI4YjRkMWI0Yjk4ODMyNWQw
YjdlYmZlYjM1MS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBDdWx0dXJlSW5mbwBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBTdHJpbmdCdWlsZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAb2xkUXVhbGlmaWVyAFJlcGxhY2VUZXh0UXVhbGlmaWVyAG5ld1F1
YWxpZmllcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF82Njk1NDcwZDZlMjc0MmUwODYxNWUzODBmNzVkNjhiYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNjY5NTQ3MGQ2ZTI3NDJlMDg2MTVlMzgwZjc1ZDY4
YmIuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9DaGFycwBTdWNjZXNzAGdl
dF9EdHMAU2NyaXB0UmVzdWx0cwBPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABXZWJDbGllbnQAU3lzdGVtLlRleHQAZ2V0X0Fzc2VtYmx5AENvcHkAADskAFAAcgBv
AGoAZQBjAHQAOgA6AEYATABfAHMAbwB1AHIAYwBlAFUAUgBMAF8ARQBuAHQAaQB0AHkAADkkAFAA
cgBvAGoAZQBjAHQAOgA6AEYATABfAGYAaQBsAGUAUABhAHQAaABfAEUAbgB0AGkAdAB5AAA/JABQ
AHIAbwBqAGUAYwB0ADoAOgBGAEwAXwBzAG8AdQByAGMAZQBVAFIATABfAEwAaQBjAGUAbgBzAGUA
ZQAAPSQAUAByAG8AagBlAGMAdAA6ADoARgBMAF8AZgBpAGwAZQBQAGEAdABoAF8ATABpAGMAZQBu
AHMAZQBlAABxUwBUAF8ANgA2ADkANQA0ADcAMABkADYAZQAyADcANAAyAGUAMAA4ADYAMQA1AGUA
MwA4ADAAZgA3ADUAZAA2ADgAYgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAQ0oo2v9YG0a/QjY4PRDQaAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQgHBQ4O
Dg4SPQQgABJxBCAAEnUFIAESeRwDIAAcBSACAQ4OCwcHDgMDEkESRQ4OAwAADgMgAA4GAAMBDg4C
BAABAQ4HBwQSSQIIAwQgAQMIAyAACAUgARJJAwgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6XFYZ
NOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQGIAMODgMDBAAAElkEAAAS
XQUAAQESXQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNjY5NTQ3MGQ2ZTI3NDJlMDg2MTVlMzgwZjc1
ZDY4YmIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAADwyAAAAAAAAAAAAAFYyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIMgAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA8hCKIwAAAQDyEIojPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA2ADYAOQA1ADQANwAwAGQANgBlADIANwA0ADIAZQAwADgANgAxADUAZQAzADgAMABm
ADcANQBkADYAOABiAGIAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAwADkAOAAuADQAMwAzADgAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADgAYgA2ADYAMABiADgAYgA0AGQAMQBiADQAYgA5ADgAOAAzADIANQBkADAAYgA3AGUAYgBmAGUA
YgAzADUAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOABiADYANgAwAGIAOABiADQAZAAxAGIANABiADkAOAA4ADMAMgA1AGQAMABiADcA
ZQBiAGYAZQBiADMANQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADYANgA5ADUANAA3ADAAZAA2AGUAMgA3ADQAMgBlADAAOAA2ADEANQBlADMAOAAwAGYA
NwA1AGQANgA4AGIAYgAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOQAwADkAOAAuADQAMwAzADgAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA5ADAAOQA4AC4ANAAzADMAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAaDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E9FFA0D5-4029-4B0C-A82B-98CDBBB182E1}"
      DTS:From="Package\Retrieve DBPR Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses"
          TopLeft="20,321" />
        <NodeLayout
          Size="200,42"
          Id="Package\Foreach Loop Container\Sequence Container\Log orgName in Console"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities"
          TopLeft="27,127" />
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals"
          TopLeft="20,227" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="106,169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="106.5,269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="105.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79.5"
              Start="0,0"
              End="0,72">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="210,418"
          Size="210,461"
          Id="Package\Foreach Loop Container\Sequence Container"
          TopLeft="142.5,52.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="486,569"
          Size="486,612"
          Id="Package\Foreach Loop Container"
          TopLeft="425.833333333332,217.936507936508" />
        <NodeLayout
          Size="180,42"
          Id="Package\Retrieve DBPR Files"
          TopLeft="580,74" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="669.416666666666,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,101.936507936508"
              Start="0,0"
              End="0,94.436507936508">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.436507936508" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Sequence Container\Associate Licenses">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="108,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 2"
          TopLeft="1321,451" />
        <NodeLayout
          Size="108,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort 1"
          TopLeft="481,459" />
        <NodeLayout
          Size="250,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Accounts to CRM"
          TopLeft="606,599" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column"
          TopLeft="255,459" />
        <NodeLayout
          Size="142,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join 1"
          TopLeft="1139,450" />
        <NodeLayout
          Size="207,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Licenses"
          TopLeft="907,226" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Conditional Split"
          TopLeft="899,449" />
        <NodeLayout
          Size="99,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Sort"
          TopLeft="927,336" />
        <NodeLayout
          Size="271,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Write Memberships to CRM"
          TopLeft="1081,605" />
        <NodeLayout
          Size="230,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Memberships"
          TopLeft="1733,449" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Derived Column 1"
          TopLeft="1490,452" />
        <NodeLayout
          Size="209,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Associate - Get - Accounts"
          TopLeft="15,459" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output1]"
          TopLeft="1321,471.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40,0"
              Start="0,0"
              End="-32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.44765625,5,50.3953125,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output]"
          TopLeft="977.5,378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.72357421875,26.1357421875,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Merge Join Output]"
          TopLeft="1213.25,492">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,113"
              Start="0,0"
              End="0,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.11953125,47.12841796875,50.2390625,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Individuals]"
          TopLeft="1058,470.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81,0"
              Start="0,0"
              End="73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.82333984375,5,119.1466796875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output2]"
          TopLeft="224,480">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,0"
              Start="0,0"
              End="23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.51357421875,5,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output1]"
          TopLeft="1733,471.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-76,0"
              Start="0,0"
              End="-68.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-68.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.44765625,5,50.3953125,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Dynamics CRM Source Output]"
          TopLeft="1010.5,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34,68"
              Start="0,0"
              End="-34,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30"
                    Point2="0,34"
                    Point3="-4,34" />
                  <mssgle:LineSegment
                    End="-30,34" />
                  <mssgle:CubicBezierSegment
                    Point1="-30,34"
                    Point2="-34,34"
                    Point3="-34,38" />
                  <mssgle:LineSegment
                    End="-34,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.72357421875,39,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Derived Column Output1]"
          TopLeft="1490,472.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61,0"
              Start="0,0"
              End="-53.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-51.94765625,5,50.3953125,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Derived Column Output]"
          TopLeft="413,480">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,0"
              Start="0,0"
              End="60.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.98642578125,5,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses\Merge Join"
          TopLeft="668,458" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Entities]"
          TopLeft="899,470">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-98,9"
              Start="0,0"
              End="-90.5,9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-45,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-45,0"
                    Point2="-49,0"
                    Point3="-49,4" />
                  <mssgle:LineSegment
                    End="-49,5" />
                  <mssgle:CubicBezierSegment
                    Point1="-49,5"
                    Point2="-49,9"
                    Point3="-53,9" />
                  <mssgle:LineSegment
                    End="-90.5,9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-98.03173828125,-17.609375,98.0634765625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Sort Output2]"
          TopLeft="589,479.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79,0"
              Start="0,0"
              End="71.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="10.48642578125,5,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Associate Licenses.Paths[Merge Join Output1]"
          TopLeft="732.75,500">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,99"
              Start="0,0"
              End="0,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.80947265625,40.12841796875,49.6189453125,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Sequence Container\Upsert - Entities">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="148,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - Alt Lic #"
          TopLeft="1471.58332524076,962.249995410442" />
        <NodeLayout
          Size="132,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Join - Lic #"
          TopLeft="1267.5,863.75" />
        <NodeLayout
          Size="176,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - RAMCO Lic #"
          TopLeft="1651.25,742.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Sort - REC Lic #"
          TopLeft="970.08333509043,866.000000163912" />
        <NodeLayout
          Size="239,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entities - Get - Accounts"
          TopLeft="1654,352.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Read - CSV Entities"
          TopLeft="959.166666666667,354" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Trim &amp; Set Defaults"
          TopLeft="961.75,751.583333333333" />
        <NodeLayout
          Size="160,46"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Multicast"
          TopLeft="1663.33332290128,854.999996766448" />
        <NodeLayout
          Size="123,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Union All"
          TopLeft="1292.5,1110" />
        <NodeLayout
          Size="150,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Joiin - Alt Lic #"
          TopLeft="1671.25,958.75" />
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Convert Data Types"
          TopLeft="1262.5,1240" />
        <NodeLayout
          Size="230,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Upsert - Entites - Write to CRM"
          TopLeft="1240.75,1368.75" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Derived Column"
          TopLeft="1653.75,563.75" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Conditional Split"
          TopLeft="1253.08332926408,963.249995395541" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities\Script Component"
          TopLeft="967.5,549.322580645161" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Union All Output 1]"
          TopLeft="1352.5,1152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.80947265625,34.6357421875,49.6189453125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output2]"
          TopLeft="1619.58332524076,981.499997705221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51.6666747592399,0"
              Start="0,0"
              End="44.1666747592399,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.1666747592399,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.77107668288005,5,55.708828125,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output1]"
          TopLeft="1741.29166145064,784.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70.499996766448"
              Start="0,0"
              End="0,62.999996766448">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.999996766448" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.26357421875,25.878416351974,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Sort Output]"
          TopLeft="1128.08333509043,885.875000081956">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139.41666490957,0"
              Start="0,0"
              End="131.91666490957,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="131.91666490957,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.103918392285,5,55.708828125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[ParsedColumns]"
          TopLeft="1049.875,591.322580645161">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,160.260752688172"
              Start="0,0"
              End="0,152.760752688172">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,152.760752688172" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.8544140625,70.766118531586,55.708828125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[No Match]"
          TopLeft="1412.08332926408,983.749995402992">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.4999959766801,0"
              Start="0,0"
              End="51.9999959766801,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.9999959766801,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.80674029291,5,107.6134765625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Multicast Output 2]"
          TopLeft="1744.79166145064,900.999996766448">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.750003233552"
              Start="0,0"
              End="0,50.250003233552">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.250003233552" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.26357421875,19.503419585526,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Multicast Output 1]"
          TopLeft="1663.33332290128,881.374998383224">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-263.83332290128,0"
              Start="0,0"
              End="-256.33332290128,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-256.33332290128,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-153.43023566939,5,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Merge Join Output1]"
          TopLeft="1746.25,1000.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-373.083333333333,109.25"
              Start="0,0"
              End="-373.083333333333,101.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.7082664526485" />
                  <mssgle:CubicBezierSegment
                    Point1="0,60.7082664526485"
                    Point2="0,64.7082664526485"
                    Point3="-4,64.7082664526485" />
                  <mssgle:LineSegment
                    End="-369.083333333333,64.7082664526485" />
                  <mssgle:CubicBezierSegment
                    Point1="-369.083333333333,64.7082664526485"
                    Point2="-373.083333333333,64.7082664526485"
                    Point3="-373.083333333333,68.7082664526485" />
                  <mssgle:LineSegment
                    End="-373.083333333333,101.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-202.100240885416,69.7082664526485,31.1171484375,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Merge Join Output]"
          TopLeft="1333.04166463204,905.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.499995395541"
              Start="0,0"
              End="0,49.999995395541">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.999995395541" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.8544140625,19.3857398852705,55.708828125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Flat File Source Output]"
          TopLeft="1049.33333333333,396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,153.322580645161"
              Start="0,0"
              End="0,145.822580645161">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,145.822580645161" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.8544140625,67.2970325100805,55.708828125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Dynamics CRM Source Output]"
          TopLeft="1773.5,394.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40.75,169.25"
              Start="0,0"
              End="-40.75,161.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.625"
                    Point2="0,84.625"
                    Point3="-4,84.625" />
                  <mssgle:LineSegment
                    End="-36.75,84.625" />
                  <mssgle:CubicBezierSegment
                    Point1="-36.75,84.625"
                    Point2="-40.75,84.625"
                    Point3="-40.75,88.625" />
                  <mssgle:LineSegment
                    End="-40.75,161.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-45.63857421875,89.625,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output2]"
          TopLeft="1353.375,1282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,86.75"
              Start="0,0"
              End="0,79.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.80947265625,34.0107421875,49.6189453125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output1]"
          TopLeft="1736,605.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,136.75"
              Start="0,0"
              End="0,129.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,129.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.26357421875,59.00341796875,50.5271484375,11.2431640625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Derived Column Output]"
          TopLeft="1048.91666754521,793.583333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.4166668305791"
              Start="0,0"
              End="0,64.9166668305791">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.9166668305791" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.8544140625,26.8440756027896,55.708828125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Entities.Paths[Conditional Split Default Output]"
          TopLeft="1333.70833129871,1005.24999539554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,104.750004604459"
              Start="0,0"
              End="0,97.250004604459">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.250004604459" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-100.2042578125,42.7959007397295,200.408515625,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Trim &amp; Set Defaults"
          TopLeft="961.75,751.583333333333" />
        <NodeLayout
          Size="123,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Union All"
          TopLeft="1460,1127" />
        <NodeLayout
          Size="190,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Read - CSV Licensees"
          TopLeft="959.166666666667,354" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Derived Column"
          TopLeft="1653.75,563.75" />
        <NodeLayout
          Size="176,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - RAMCO Lic #"
          TopLeft="1651.25,742.5" />
        <NodeLayout
          Size="160,46"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Multicast"
          TopLeft="1663.33332290128,854.999996766448" />
        <NodeLayout
          Size="148,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - Alt Lic #"
          TopLeft="1471.58332524076,962.249995410442" />
        <NodeLayout
          Size="248,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Write to CRM"
          TopLeft="1229.75,1367.75" />
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join"
          TopLeft="1310,874" />
        <NodeLayout
          Size="177,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Convert Data Types"
          TopLeft="1245.5,1239" />
        <NodeLayout
          Size="276,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Upsert - Individuals - Get - Memberships"
          TopLeft="1650,354.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Script Component"
          TopLeft="967.5,549.322580645161" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Sort - REC Lic #"
          TopLeft="970.08333509043,866.000000163912" />
        <NodeLayout
          Size="142,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Merge Join 1"
          TopLeft="1675,959" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals\Conditional Split"
          TopLeft="1253.08332926408,963.249995395541" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Conditional Split Default Output]"
          TopLeft="1332.58332926408,1005.24999539554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="188.91667073592,121.750004604459"
              Start="0,0"
              End="188.91667073592,114.250004604459">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.8750023022295" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.8750023022295"
                    Point2="0,60.8750023022295"
                    Point3="4,60.8750023022295" />
                  <mssgle:LineSegment
                    End="184.91667073592,60.8750023022295" />
                  <mssgle:CubicBezierSegment
                    Point1="184.91667073592,60.8750023022295"
                    Point2="188.91667073592,60.8750023022295"
                    Point3="188.91667073592,64.8750023022295" />
                  <mssgle:LineSegment
                    End="188.91667073592,114.250004604459" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="23.84442911796,65.8750023022295,200.408515625,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Union All Output 1]"
          TopLeft="1521.5,1169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-187.5,70"
              Start="0,0"
              End="-187.5,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31"
                    Point2="0,35"
                    Point3="-4,35" />
                  <mssgle:LineSegment
                    End="-183.5,35" />
                  <mssgle:CubicBezierSegment
                    Point1="-183.5,35"
                    Point2="-187.5,35"
                    Point3="-187.5,39" />
                  <mssgle:LineSegment
                    End="-187.5,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.86953125,40,50.2390625,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output2]"
          TopLeft="1619.58332524076,981.624997705221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.4166747592401,0"
              Start="0,0"
              End="47.9166747592401,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.9166747592401,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="8.50474362962005,5,30.9071875,9.568359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output1]"
          TopLeft="1128.08333509043,891.000000081956">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.91666490957,0"
              Start="0,0"
              End="174.41666490957,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="174.41666490957,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="56.484758236035,5,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Sort Output]"
          TopLeft="1741.29166145064,784.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70.499996766448"
              Start="0,0"
              End="0,62.999996766448">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.999996766448" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.19765625,25.885740570724,50.3953125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[ParsedColumns]"
          TopLeft="1049.875,591.322580645161">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,160.260752688172"
              Start="0,0"
              End="0,152.760752688172">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,152.760752688172" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.72357421875,70.766118531586,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[No Match]"
          TopLeft="1412.08332926408,983.749995402992">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.4999959766801,0"
              Start="0,0"
              End="51.9999959766801,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.9999959766801,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.82306439459005,5,82.7434765625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Multicast Output 3]"
          TopLeft="1663.33332290128,877.999996766448">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.33332290128,17.000003233552"
              Start="0,0"
              End="-212.83332290128,17.000003233552">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-106.16666145064,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-106.16666145064,0"
                    Point2="-110.16666145064,0"
                    Point3="-110.16666145064,4" />
                  <mssgle:LineSegment
                    End="-110.16666145064,13.000003233552" />
                  <mssgle:CubicBezierSegment
                    Point1="-110.16666145064,13.000003233552"
                    Point2="-110.16666145064,17.000003233552"
                    Point3="-114.16666145064,17.000003233552" />
                  <mssgle:LineSegment
                    End="-212.83332290128,17.000003233552" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-135.36431770064,-17.228515625,50.3953125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Multicast Output 1]"
          TopLeft="1744.66666145064,900.999996766448">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.000003233552"
              Start="0,0"
              End="0,50.500003233552">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.500003233552" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.19765625,19.635743804276,50.3953125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Merge Join Output1]"
          TopLeft="1746,1001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-205.333333333333,126"
              Start="0,0"
              End="-205.333333333333,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.6292134831461" />
                  <mssgle:CubicBezierSegment
                    Point1="0,70.6292134831461"
                    Point2="0,74.6292134831461"
                    Point3="-4,74.6292134831461" />
                  <mssgle:LineSegment
                    End="-201.333333333333,74.6292134831461" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.333333333333,74.6292134831461"
                    Point2="-205.333333333333,74.6292134831461"
                    Point3="-205.333333333333,78.6292134831461" />
                  <mssgle:LineSegment
                    End="-205.333333333333,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.120260416666,79.6292134831461,30.9071875,9.568359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Merge Join Output]"
          TopLeft="1376.5,916">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.91667073592,47.249995395541"
              Start="0,0"
              End="-43.91667073592,39.749995395541">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6249976977705" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.6249976977705"
                    Point2="0,23.6249976977705"
                    Point3="-4,23.6249976977705" />
                  <mssgle:LineSegment
                    End="-39.91667073592,23.6249976977705" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.91667073592,23.6249976977705"
                    Point2="-43.91667073592,23.6249976977705"
                    Point3="-43.91667073592,27.6249976977705" />
                  <mssgle:LineSegment
                    End="-43.91667073592,39.749995395541" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.07786661796,28.6249976977705,50.2390625,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Flat File Source Output]"
          TopLeft="1052.58333333333,396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,153.322580645161"
              Start="0,0"
              End="0,145.822580645161">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,145.822580645161" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.72357421875,67.2970325100805,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Dynamics CRM Source Output]"
          TopLeft="1788,396.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-55.25,167.25"
              Start="0,0"
              End="-55.25,159.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.625"
                    Point2="0,83.625"
                    Point3="-4,83.625" />
                  <mssgle:LineSegment
                    End="-51.25,83.625" />
                  <mssgle:CubicBezierSegment
                    Point1="-51.25,83.625"
                    Point2="-55.25,83.625"
                    Point3="-55.25,87.625" />
                  <mssgle:LineSegment
                    End="-55.25,159.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.82265625,88.625,50.3953125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output2]"
          TopLeft="1334,1281">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.75,86.75"
              Start="0,0"
              End="19.75,79.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.375"
                    Point2="0,43.375"
                    Point3="4,43.375" />
                  <mssgle:LineSegment
                    End="15.75,43.375" />
                  <mssgle:CubicBezierSegment
                    Point1="15.75,43.375"
                    Point2="19.75,43.375"
                    Point3="19.75,47.375" />
                  <mssgle:LineSegment
                    End="19.75,79.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24453125,48.375,50.2390625,11.2236328125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output1]"
          TopLeft="1736,605.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,136.75"
              Start="0,0"
              End="0,129.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,129.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.19765625,59.0107421875,50.3953125,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Sequence Container\Upsert - Individuals.Paths[Derived Column Output]"
          TopLeft="1048.91666754521,793.583333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.4166668305789"
              Start="0,0"
              End="0,64.9166668305789">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.9166668305789" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.72357421875,26.8440756027895,61.4471484375,11.228515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>